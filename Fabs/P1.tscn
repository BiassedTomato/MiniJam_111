[gd_scene load_steps=30 format=2]

[ext_resource path="res://Fabs/Base.tscn" type="PackedScene" id=1]
[ext_resource path="res://Fabs/Eye.tscn" type="PackedScene" id=2]
[ext_resource path="res://SceneChangeTrigger.tscn" type="PackedScene" id=3]
[ext_resource path="res://Clicker.tres" type="Shader" id=4]
[ext_resource path="res://Fabs/ColorfulBlock.tscn" type="PackedScene" id=5]
[ext_resource path="res://LockedDoor.png" type="Texture" id=6]
[ext_resource path="res://ShroomShader.tres" type="Shader" id=7]

[sub_resource type="ShaderMaterial" id=30]
resource_local_to_scene = true
shader = ExtResource( 7 )
shader_param/red = false
shader_param/green = false
shader_param/blue = false

[sub_resource type="Shader" id=13]
resource_local_to_scene = true
code = "shader_type canvas_item;

uniform bool red;
uniform bool green;
uniform bool blue;

uniform bool alpha;

uniform vec4 clear_color:hint_color=vec4(0.15,0.15,0.15,1);

void fragment()
{
	float rv=0f;
	float gv=0f;
	float bv=0f;
	
	float av=0f;
	
	if(!red)
		rv=0.85f;
	if(!green)
		gv=0.85f;
	if(!blue)
		bv=0.85f;
		
	if(!alpha)
		av=0.85f;
		
	vec4 pix=texture(TEXTURE,UV);
		COLOR=vec4(max(pix.r-rv,0.15f),max(pix.g-gv,0.15f),max(pix.b-bv,0.15f),pix.a);
	
	
}"

[sub_resource type="ShaderMaterial" id=14]
resource_local_to_scene = true
shader = SubResource( 13 )
shader_param/red = true
shader_param/green = true
shader_param/blue = true
shader_param/alpha = false
shader_param/clear_color = Color( 0.15, 0.15, 0.15, 1 )

[sub_resource type="RectangleShape2D" id=15]
extents = Vector2( 9, 16 )

[sub_resource type="Shader" id=18]
resource_local_to_scene = true
code = "shader_type canvas_item;

uniform bool red;
uniform bool green;
uniform bool blue;

uniform bool alpha;

void fragment()
{
	float rv=0f;
	float gv=0f;
	float bv=0f;
	
	float av=0f;
	
	if(!red)
		rv=0.85f;
	if(!green)
		gv=0.85f;
	if(!blue)
		bv=0.85f;
		
	if(!alpha)
		av=0.85f;
		
		vec4 pix=texture(TEXTURE,UV);
		
	if(!green&&!red&&!blue)
	{
		COLOR=vec4(0f,0f,0f,0f);
	}
	else
		COLOR=vec4(max(pix.r-rv,0.15f),max(pix.g-gv,0.15f),max(pix.b-bv,0.15f),pix.a);
	
	
}"

[sub_resource type="ShaderMaterial" id=19]
resource_local_to_scene = true
shader = SubResource( 18 )
shader_param/red = true
shader_param/green = false
shader_param/blue = false
shader_param/alpha = false

[sub_resource type="Shader" id=20]
resource_local_to_scene = true
code = "shader_type canvas_item;

uniform bool red;
uniform bool green;
uniform bool blue;

uniform bool alpha;

void fragment()
{
	float rv=0f;
	float gv=0f;
	float bv=0f;
	
	float av=0f;
	
	if(!red)
		rv=0.85f;
	if(!green)
		gv=0.85f;
	if(!blue)
		bv=0.85f;
		
	if(!alpha)
		av=0.85f;
		
		vec4 pix=texture(TEXTURE,UV);
		
	if(!green&&!red&&!blue)
	{
		COLOR=vec4(0f,0f,0f,0f);
	}
	else
		COLOR=vec4(max(pix.r-rv,0.15f),max(pix.g-gv,0.15f),max(pix.b-bv,0.15f),pix.a);
	
	
}"

[sub_resource type="ShaderMaterial" id=21]
resource_local_to_scene = true
shader = SubResource( 20 )
shader_param/red = true
shader_param/green = false
shader_param/blue = false
shader_param/alpha = false

[sub_resource type="Shader" id=22]
resource_local_to_scene = true
code = "shader_type canvas_item;

uniform bool red;
uniform bool green;
uniform bool blue;

uniform bool alpha;

void fragment()
{
	float rv=0f;
	float gv=0f;
	float bv=0f;
	
	float av=0f;
	
	if(!red)
		rv=0.85f;
	if(!green)
		gv=0.85f;
	if(!blue)
		bv=0.85f;
		
	if(!alpha)
		av=0.85f;
		
		vec4 pix=texture(TEXTURE,UV);
		
	if(!green&&!red&&!blue)
	{
		COLOR=vec4(0f,0f,0f,0f);
	}
	else
		COLOR=vec4(max(pix.r-rv,0.15f),max(pix.g-gv,0.15f),max(pix.b-bv,0.15f),pix.a);
	
	
}"

[sub_resource type="ShaderMaterial" id=23]
resource_local_to_scene = true
shader = SubResource( 22 )
shader_param/red = false
shader_param/green = true
shader_param/blue = false
shader_param/alpha = false

[sub_resource type="Shader" id=24]
resource_local_to_scene = true
code = "shader_type canvas_item;

uniform bool red;
uniform bool green;
uniform bool blue;

uniform bool alpha;

void fragment()
{
	float rv=0f;
	float gv=0f;
	float bv=0f;
	
	float av=0f;
	
	if(!red)
		rv=0.85f;
	if(!green)
		gv=0.85f;
	if(!blue)
		bv=0.85f;
		
	if(!alpha)
		av=0.85f;
		
		vec4 pix=texture(TEXTURE,UV);
		
	if(!green&&!red&&!blue)
	{
		COLOR=vec4(0f,0f,0f,0f);
	}
	else
		COLOR=vec4(max(pix.r-rv,0.15f),max(pix.g-gv,0.15f),max(pix.b-bv,0.15f),pix.a);
	
	
}"

[sub_resource type="ShaderMaterial" id=25]
resource_local_to_scene = true
shader = SubResource( 24 )
shader_param/red = false
shader_param/green = true
shader_param/blue = false
shader_param/alpha = false

[sub_resource type="Shader" id=26]
resource_local_to_scene = true
code = "shader_type canvas_item;

uniform bool red;
uniform bool green;
uniform bool blue;

uniform bool alpha;

void fragment()
{
	float rv=0f;
	float gv=0f;
	float bv=0f;
	
	float av=0f;
	
	if(!red)
		rv=0.85f;
	if(!green)
		gv=0.85f;
	if(!blue)
		bv=0.85f;
		
	if(!alpha)
		av=0.85f;
		
		vec4 pix=texture(TEXTURE,UV);
		
	if(!green&&!red&&!blue)
	{
		COLOR=vec4(0f,0f,0f,0f);
	}
	else
		COLOR=vec4(max(pix.r-rv,0.15f),max(pix.g-gv,0.15f),max(pix.b-bv,0.15f),pix.a);
	
	
}"

[sub_resource type="ShaderMaterial" id=27]
resource_local_to_scene = true
shader = SubResource( 26 )
shader_param/red = false
shader_param/green = false
shader_param/blue = true
shader_param/alpha = false

[sub_resource type="Shader" id=16]
resource_local_to_scene = true
code = "shader_type canvas_item;

uniform bool red;
uniform bool green;
uniform bool blue;

uniform bool alpha;

void fragment()
{
	float rv=0f;
	float gv=0f;
	float bv=0f;
	
	float av=0f;
	
	if(!red)
		rv=0.85f;
	if(!green)
		gv=0.85f;
	if(!blue)
		bv=0.85f;
		
	if(!alpha)
		av=0.85f;
		
		vec4 pix=texture(TEXTURE,UV);
		
	if(!green&&!red&&!blue)
	{
		COLOR=vec4(0f,0f,0f,0f);
	}
	else
		COLOR=vec4(max(pix.r-rv,0.15f),max(pix.g-gv,0.15f),max(pix.b-bv,0.15f),pix.a);
	
	
}"

[sub_resource type="ShaderMaterial" id=28]
resource_local_to_scene = true
shader = SubResource( 16 )
shader_param/red = false
shader_param/green = false
shader_param/blue = true
shader_param/alpha = false

[sub_resource type="ShaderMaterial" id=6]
resource_local_to_scene = true
shader = ExtResource( 4 )
shader_param/red = true
shader_param/green = false
shader_param/blue = false
shader_param/alpha = null

[sub_resource type="Shader" id=9]
resource_local_to_scene = true
code = "shader_type canvas_item;

uniform bool red;
uniform bool green;
uniform bool blue;

uniform bool alpha;

uniform vec4 clear_color:hint_color=vec4(0.15,0.15,0.15,1);

void fragment()
{
	float rv=0f;
	float gv=0f;
	float bv=0f;
	
	float av=0f;
	
	if(!red)
		rv=0.85f;
	if(!green)
		gv=0.85f;
	if(!blue)
		bv=0.85f;
		
	if(!alpha)
		av=0.85f;
		
	vec4 pix=texture(TEXTURE,UV);
		COLOR=vec4(max(pix.r-rv,0.15f),max(pix.g-gv,0.15f),max(pix.b-bv,0.15f),pix.a);
	
	
}"

[sub_resource type="ShaderMaterial" id=10]
resource_local_to_scene = true
shader = SubResource( 9 )
shader_param/red = false
shader_param/green = false
shader_param/blue = true
shader_param/alpha = null
shader_param/clear_color = Color( 0.15, 0.15, 0.15, 1 )

[sub_resource type="Shader" id=11]
resource_local_to_scene = true
code = "shader_type canvas_item;

uniform bool red;
uniform bool green;
uniform bool blue;

uniform bool alpha;

uniform vec4 clear_color:hint_color=vec4(0.15,0.15,0.15,1);

void fragment()
{
	float rv=0f;
	float gv=0f;
	float bv=0f;
	
	float av=0f;
	
	if(!red)
		rv=0.85f;
	if(!green)
		gv=0.85f;
	if(!blue)
		bv=0.85f;
		
	if(!alpha)
		av=0.85f;
		
	vec4 pix=texture(TEXTURE,UV);
		COLOR=vec4(max(pix.r-rv,0.15f),max(pix.g-gv,0.15f),max(pix.b-bv,0.15f),pix.a);
	
	
}"

[sub_resource type="ShaderMaterial" id=12]
resource_local_to_scene = true
shader = SubResource( 11 )
shader_param/red = false
shader_param/green = true
shader_param/blue = false
shader_param/alpha = null
shader_param/clear_color = Color( 0.15, 0.15, 0.15, 1 )

[sub_resource type="RectangleShape2D" id=29]
resource_local_to_scene = true
extents = Vector2( 16, 8 )

[node name="Base" instance=ExtResource( 1 )]
DefaultRedEnabled = true
DefaultGreenEnabled = true
DefaultBlueEnabled = true

[node name="RichTextLabel" parent="CanvasLayer" index="0"]
text = "MIX AND MATCH"

[node name="Bounds" parent="." index="1"]
tile_data = PoolIntArray( 0, 5, 65536, 1, 5, 65537, 2, 5, 65537, 3, 5, 65537, 4, 5, 65537, 5, 5, 65537, 6, 5, 65537, 7, 5, 65537, 8, 5, 65537, 9, 5, 65537, 10, 5, 65537, 13, 5, 65537, 14, 5, 65537, 15, 5, 65537, 16, 5, 65537, 17, 5, 65537, 18, 5, 65537, 19, 5, 65537, 20, 5, 65537, 21, 5, 65537, 22, 5, 65537, 23, 5, 65537, 24, 5, 65537, 25, 5, 65538, 65536, 5, 131072, 65537, 5, 131073, 65538, 5, 131073, 65539, 5, 131073, 65540, 5, 131073, 65541, 5, 131073, 65542, 5, 131073, 65543, 5, 131073, 65544, 5, 131073, 65545, 5, 131073, 65546, 5, 131073, 65547, 5, 131073, 65548, 5, 131073, 65549, 5, 131073, 65550, 5, 131073, 65551, 5, 131073, 65552, 5, 131073, 65553, 5, 131073, 65554, 5, 131073, 65555, 5, 131073, 65556, 5, 131073, 65557, 5, 131073, 65558, 5, 131073, 65559, 5, 131073, 65560, 5, 131073, 65561, 5, 131074, 131072, 5, 131072, 131073, 5, 131073, 131074, 5, 131073, 131075, 5, 131073, 131076, 5, 131073, 131077, 5, 131073, 131078, 5, 131073, 131079, 5, 131073, 131080, 5, 131073, 131081, 5, 131073, 131082, 5, 131073, 131083, 5, 131073, 131084, 5, 131073, 131085, 5, 131073, 131086, 5, 131073, 131087, 5, 131073, 131088, 5, 131073, 131089, 5, 131073, 131090, 5, 131073, 131091, 5, 131073, 131092, 5, 131073, 131093, 5, 131073, 131094, 5, 131073, 131095, 5, 131073, 131096, 5, 131073, 131097, 5, 131074, 196608, 5, 131072, 196609, 5, 131073, 196610, 5, 131073, 196611, 5, 131073, 196612, 5, 131073, 196613, 5, 131073, 196614, 5, 131073, 196615, 5, 131073, 196616, 5, 131073, 196617, 5, 131073, 196618, 5, 131073, 196619, 5, 131073, 196620, 5, 131073, 196621, 5, 131073, 196622, 5, 131073, 196623, 5, 131073, 196624, 5, 131073, 196625, 5, 131073, 196626, 5, 131073, 196627, 5, 131073, 196628, 5, 131073, 196629, 5, 131073, 196630, 5, 131073, 196631, 5, 131073, 196632, 5, 131073, 196633, 5, 131074, 262144, 5, 131072, 262145, 5, 131073, 262146, 5, 131073, 262147, 5, 131073, 262148, 5, 131073, 262149, 5, 131073, 262150, 5, 131073, 262151, 5, 131073, 262152, 5, 131073, 262153, 5, 131073, 262154, 5, 131073, 262155, 5, 131073, 262156, 5, 131073, 262157, 5, 131073, 262158, 5, 131073, 262159, 5, 131073, 262160, 5, 131073, 262161, 5, 131073, 262162, 5, 131073, 262163, 5, 131073, 262164, 5, 131073, 262165, 5, 131073, 262166, 5, 131073, 262167, 5, 131073, 262168, 5, 131073, 262169, 5, 131074, 327680, 5, 131072, 327681, 5, 131073, 327682, 5, 131073, 327683, 5, 131073, 327684, 5, 131073, 327685, 5, 131073, 327686, 5, 131073, 327687, 5, 131073, 327688, 5, 131073, 327689, 5, 131073, 327690, 5, 131073, 327691, 5, 131073, 327692, 5, 131073, 327693, 5, 131073, 327694, 5, 131073, 327695, 5, 131073, 327696, 5, 131073, 327697, 5, 131073, 327698, 5, 131073, 327699, 5, 131073, 327700, 5, 131073, 327701, 5, 131073, 327702, 5, 131073, 327703, 5, 131073, 327704, 5, 131073, 327705, 5, 131074, 393216, 5, 131072, 393217, 5, 131073, 393218, 5, 131073, 393219, 5, 131073, 393220, 5, 131073, 393221, 5, 131073, 393222, 5, 131073, 393223, 5, 131073, 393224, 5, 131073, 393225, 5, 131073, 393226, 5, 131073, 393227, 5, 131073, 393228, 5, 131073, 393229, 5, 131073, 393230, 5, 131073, 393231, 5, 131073, 393232, 5, 131073, 393233, 5, 131073, 393234, 5, 131073, 393235, 5, 131073, 393236, 5, 131073, 393237, 5, 131073, 393238, 5, 131073, 393239, 5, 131073, 393240, 5, 131073, 393241, 5, 131074, 458752, 5, 131072, 458753, 5, 131073, 458754, 5, 131073, 458755, 5, 131073, 458756, 5, 131073, 458757, 5, 131073, 458758, 5, 131073, 458759, 5, 131073, 458760, 5, 131073, 458761, 5, 131073, 458762, 5, 131073, 458763, 5, 131073, 458764, 5, 131073, 458765, 5, 131073, 458766, 5, 131073, 458767, 5, 131073, 458768, 5, 131073, 458769, 5, 131073, 458770, 5, 131073, 458771, 5, 131073, 458772, 5, 131073, 458773, 5, 131073, 458774, 5, 131073, 458775, 5, 131073, 458776, 5, 131073, 458777, 5, 131074, 524288, 5, 131072, 524289, 5, 131073, 524290, 5, 131073, 524291, 5, 131073, 524292, 5, 131073, 524293, 5, 131073, 524294, 5, 131073, 524295, 5, 131073, 524296, 5, 131073, 524297, 5, 131073, 524298, 5, 131073, 524299, 5, 131073, 524300, 5, 131073, 524301, 5, 131073, 524302, 5, 131073, 524303, 5, 131073, 524304, 5, 131073, 524305, 5, 131073, 524306, 5, 131073, 524307, 5, 131073, 524308, 5, 131073, 524309, 5, 131073, 524310, 5, 131073, 524311, 5, 131073, 524312, 5, 131073, 524313, 5, 131074, 589824, 5, 131072, 589825, 5, 131073, 589826, 5, 131073, 589827, 5, 131073, 589828, 5, 131073, 589829, 5, 131073, 589830, 5, 131073, 589831, 5, 131073, 589832, 5, 131073, 589833, 5, 131073, 589834, 5, 131073, 589835, 5, 131073, 589836, 5, 131073, 589837, 5, 131073, 589838, 5, 131073, 589839, 5, 131073, 589840, 5, 131073, 589841, 5, 131073, 589842, 5, 131073, 589843, 5, 131073, 589844, 5, 131073, 589845, 5, 131073, 589846, 5, 131073, 589847, 5, 131073, 589848, 5, 131073, 589849, 5, 131074, 655360, 5, 131072, 655361, 5, 131073, 655362, 5, 131073, 655363, 5, 131073, 655364, 5, 131073, 655365, 5, 131073, 655366, 5, 131073, 655367, 5, 131073, 655368, 5, 131073, 655369, 5, 131073, 655370, 5, 131073, 655371, 5, 131073, 655372, 5, 131073, 655373, 5, 131073, 655374, 5, 131073, 655375, 5, 131073, 655376, 5, 131073, 655377, 5, 131073, 655378, 5, 131073, 655379, 5, 131073, 655380, 5, 131073, 655381, 5, 131073, 655382, 5, 131073, 655383, 5, 131073, 655384, 5, 131073, 655385, 5, 131074, 720896, 5, 131072, 720897, 5, 131073, 720898, 5, 131073, 720899, 5, 131073, 720900, 5, 131073, 720901, 5, 131073, 720902, 5, 131073, 720903, 5, 131073, 720904, 5, 131073, 720905, 1, 2, 720906, 1, 2, 720907, 5, 131073, 720908, 5, 131073, 720909, 5, 131073, 720910, 1, 0, 720911, 1, 0, 720912, 5, 131073, 720913, 5, 131073, 720914, 5, 131073, 720915, 5, 131073, 720916, 5, 131073, 720917, 5, 131073, 720918, 5, 131073, 720919, 5, 131073, 720920, 5, 131073, 720921, 5, 131074, 786432, 5, 131072, 786433, 5, 131073, 786434, 5, 131073, 786435, 5, 131073, 786436, 5, 131073, 786437, 5, 131073, 786438, 5, 131073, 786439, 5, 131073, 786440, 1, 2, 786441, 5, 131073, 786442, 5, 131073, 786443, 1, 2, 786444, 1, 1, 786445, 1, 0, 786446, 5, 131073, 786447, 5, 131073, 786448, 1, 1, 786449, 5, 131073, 786450, 5, 131073, 786451, 5, 131073, 786452, 5, 131073, 786453, 5, 131073, 786454, 5, 131073, 786455, 5, 131073, 786456, 5, 131073, 786457, 5, 131074, 851968, 5, 131072, 851969, 5, 131073, 851970, 5, 131073, 851971, 5, 131073, 851972, 5, 131073, 851973, 5, 131073, 851974, 5, 131073, 851975, 1, 2, 851976, 5, 131073, 851977, 5, 131073, 851978, 5, 131073, 851979, 5, 131073, 851980, 5, 131073, 851981, 5, 131073, 851982, 5, 131073, 851983, 5, 131073, 851984, 5, 131073, 851985, 1, 2, 851986, 5, 131073, 851987, 5, 131073, 851988, 5, 131073, 851989, 5, 131073, 851990, 5, 131073, 851991, 5, 131073, 851992, 5, 131073, 851993, 5, 131074, 917504, 5, 131072, 917505, 5, 131073, 917506, 5, 131073, 917507, 5, 131073, 917508, 5, 131073, 917509, 5, 131073, 917510, 5, 131073, 917511, 1, 0, 917512, 5, 131073, 917513, 5, 131073, 917514, 5, 131073, 917515, 5, 131073, 917516, 5, 131073, 917517, 5, 131073, 917518, 5, 131073, 917519, 5, 131073, 917520, 5, 131073, 917521, 1, 0, 917522, 5, 131073, 917523, 5, 131073, 917524, 5, 131073, 917525, 5, 131073, 917526, 5, 131073, 917527, 5, 131073, 917528, 5, 131073, 917529, 5, 131074, 983040, 5, 131072, 983041, 5, 131073, 983042, 5, 131073, 983043, 5, 131073, 983044, 5, 131073, 983045, 5, 131073, 983046, 5, 131073, 983047, 1, 1, 983048, 5, 131073, 983049, 5, 131073, 983050, 5, 131073, 983051, 5, 131073, 983052, 5, 131073, 983053, 5, 131073, 983054, 5, 131073, 983055, 5, 131073, 983056, 5, 131073, 983057, 1, 2, 983058, 5, 131073, 983059, 5, 131073, 983060, 5, 131073, 983061, 5, 131073, 983062, 5, 131073, 983063, 5, 131073, 983064, 5, 131073, 983065, 5, 131074, 1048576, 5, 131072, 1048577, 5, 131073, 1048578, 5, 131073, 1048579, 5, 131073, 1048580, 5, 131073, 1048581, 5, 131073, 1048582, 5, 131073, 1048583, 5, 131073, 1048584, 1, 1, 1048585, 5, 131073, 1048586, 5, 131073, 1048587, 5, 131073, 1048588, 5, 131073, 1048589, 5, 131073, 1048590, 5, 131073, 1048591, 5, 131073, 1048592, 1, 0, 1048593, 5, 131073, 1048594, 5, 131073, 1048595, 5, 131073, 1048596, 5, 131073, 1048597, 5, 131073, 1048598, 5, 131073, 1048599, 5, 131073, 1048600, 5, 131073, 1048601, 5, 131074, 1114112, 5, 131072, 1114113, 5, 131073, 1114114, 5, 131073, 1114115, 5, 131073, 1114116, 5, 131073, 1114117, 5, 131073, 1114118, 5, 131073, 1114119, 5, 131073, 1114120, 5, 131073, 1114121, 1, 2, 1114122, 5, 131073, 1114123, 5, 131073, 1114124, 5, 131073, 1114125, 5, 131073, 1114126, 5, 131073, 1114127, 1, 0, 1114128, 5, 131073, 1114129, 5, 131073, 1114130, 5, 131073, 1114131, 5, 131073, 1114132, 5, 131073, 1114133, 5, 131073, 1114134, 5, 131073, 1114135, 5, 131073, 1114136, 5, 131073, 1114137, 5, 131074, 1179648, 5, 131072, 1179649, 5, 131073, 1179650, 5, 131073, 1179651, 5, 131073, 1179652, 5, 131073, 1179653, 5, 131073, 1179654, 5, 131073, 1179655, 5, 131073, 1179656, 5, 131073, 1179657, 5, 131073, 1179658, 1, 0, 1179659, 1, 1, 1179660, 5, 131073, 1179661, 1, 0, 1179662, 1, 1, 1179663, 5, 131073, 1179664, 5, 131073, 1179665, 5, 131073, 1179666, 5, 131073, 1179667, 5, 131073, 1179668, 5, 131073, 1179669, 5, 131073, 1179670, 5, 131073, 1179671, 5, 131073, 1179672, 5, 131073, 1179673, 5, 131074, 1245184, 5, 131072, 1245185, 5, 131073, 1245186, 5, 131073, 1245187, 5, 131073, 1245188, 5, 131073, 1245189, 5, 131073, 1245190, 5, 131073, 1245191, 5, 131073, 1245192, 5, 131073, 1245193, 5, 131073, 1245194, 5, 131073, 1245195, 5, 131073, 1245196, 1, 0, 1245197, 5, 131073, 1245198, 5, 131073, 1245199, 5, 131073, 1245200, 5, 131073, 1245201, 5, 131073, 1245202, 5, 131073, 1245203, 5, 131073, 1245204, 5, 131073, 1245205, 5, 131073, 1245206, 5, 131073, 1245207, 5, 131073, 1245208, 5, 131073, 1245209, 5, 131074, 1310720, 5, 131072, 1310721, 5, 131073, 1310722, 5, 131073, 1310723, 5, 131073, 1310724, 5, 131073, 1310725, 5, 131073, 1310726, 5, 131073, 1310727, 5, 131073, 1310728, 5, 131073, 1310729, 5, 131073, 1310730, 5, 131073, 1310731, 5, 131073, 1310732, 5, 131073, 1310733, 5, 131073, 1310734, 5, 131073, 1310735, 5, 131073, 1310736, 5, 131073, 1310737, 5, 131073, 1310738, 5, 131073, 1310739, 5, 131073, 1310740, 5, 131073, 1310741, 5, 131073, 1310742, 5, 131073, 1310743, 5, 131073, 1310744, 5, 131073, 1310745, 5, 131074, 1376256, 5, 131072, 1376257, 5, 131073, 1376258, 5, 131073, 1376259, 5, 131073, 1376260, 5, 131073, 1376261, 5, 131073, 1376262, 5, 3, 1376263, 5, 196609, 1376264, 5, 196609, 1376265, 5, 4, 1376266, 5, 131073, 1376267, 5, 131073, 1376268, 5, 131073, 1376269, 5, 131073, 1376270, 5, 131073, 1376271, 5, 131073, 1376272, 5, 131073, 1376273, 5, 131073, 1376274, 5, 131073, 1376275, 5, 131073, 1376276, 5, 131073, 1376277, 5, 131073, 1376278, 5, 131073, 1376279, 5, 131073, 1376280, 5, 131073, 1376281, 5, 131074, 1441792, 5, 196608, 1441793, 5, 196609, 1441794, 5, 196609, 1441795, 5, 196609, 1441796, 5, 196609, 1441797, 5, 196609, 1441798, 5, 196610, 1441801, 5, 196608, 1441802, 5, 196609, 1441803, 5, 196609, 1441804, 5, 196609, 1441805, 5, 196609, 1441806, 5, 196609, 1441807, 5, 196609, 1441808, 5, 196609, 1441809, 5, 196609, 1441810, 5, 196609, 1441811, 5, 196609, 1441812, 5, 196609, 1441813, 5, 196609, 1441814, 5, 196609, 1441815, 5, 196609, 1441816, 5, 196609, 1441817, 5, 196610 )

[node name="Character" parent="." index="2"]
position = Vector2( 131, 313 )

[node name="Sprite" parent="Character" index="0"]
material = SubResource( 30 )

[node name="Door" parent="." index="3" groups=["Blue", "Green", "Red"] instance=ExtResource( 5 )]
position = Vector2( 192, -8 )
rotation = -1.5708
collision_layer = 56
collision_mask = 56

[node name="Sprite" parent="Door" index="0"]
material = SubResource( 14 )
texture = ExtResource( 6 )

[node name="CollisionShape2D" parent="Door" index="1"]
position = Vector2( -15, 0 )
shape = SubResource( 15 )

[node name="Camera2D" parent="." index="4"]
position = Vector2( 131, 313 )

[node name="RedWalls" parent="." index="5"]
material = SubResource( 19 )
tile_data = PoolIntArray( 131090, 2, 0, 131091, 2, 1, 131092, 2, 1, 131093, 2, 1, 131094, 2, 2, 196626, 2, 65536, 196627, 2, 65537, 196628, 2, 65537, 196629, 2, 65537, 196630, 2, 65538, 262162, 2, 65536, 262163, 2, 65537, 262164, 2, 65537, 262165, 2, 65537, 262166, 2, 65538, 327698, 2, 65536, 327699, 2, 65537, 327700, 2, 65537, 327701, 2, 65537, 327702, 2, 65538, 393234, 2, 131072, 393235, 2, 131073, 393236, 2, 131073, 393237, 2, 131073, 393238, 2, 131074 )

[node name="RedPaths" parent="." index="6"]
material = SubResource( 21 )

[node name="GreenWalls" parent="." index="7"]
material = SubResource( 23 )

[node name="GreenPaths" parent="." index="8"]
material = SubResource( 25 )

[node name="BlueWalls" parent="." index="9"]
material = SubResource( 27 )
tile_data = PoolIntArray( 131074, 2, 0, 131075, 2, 1, 131076, 2, 1, 131077, 2, 1, 131078, 2, 2, 196610, 2, 65536, 196611, 2, 65537, 196612, 2, 65537, 196613, 2, 65537, 196614, 2, 65538, 262146, 2, 65536, 262147, 2, 65537, 262148, 2, 65537, 262149, 2, 65537, 262150, 2, 65538, 327682, 2, 65536, 327683, 2, 65537, 327684, 2, 65537, 327685, 2, 65537, 327686, 2, 65538, 393218, 2, 131072, 393219, 2, 131073, 393220, 2, 131073, 393221, 2, 131073, 393222, 2, 131074 )

[node name="BluePaths" parent="." index="10"]
material = SubResource( 28 )

[node name="Redeye" parent="." index="11" instance=ExtResource( 2 )]
position = Vector2( 73, 72 )

[node name="Sprite" parent="Redeye" index="0"]
material = SubResource( 6 )

[node name="Blueeye" parent="." index="12" instance=ExtResource( 2 )]
position = Vector2( 192, 72 )
Color = 5

[node name="Sprite" parent="Blueeye" index="0"]
material = SubResource( 10 )

[node name="Greeneye" parent="." index="13" instance=ExtResource( 2 )]
position = Vector2( 329, 72 )
Color = 4

[node name="Sprite" parent="Greeneye" index="0"]
material = SubResource( 12 )

[node name="SceneChangeTrigger" parent="." index="14" instance=ExtResource( 3 )]
position = Vector2( 192, -19 )
ScenePath = "res://Fabs/Walks.tscn"

[node name="CollisionShape2D" parent="SceneChangeTrigger" index="0"]
position = Vector2( 0, 9 )
shape = SubResource( 29 )

[editable path="Character"]
[editable path="Door"]
[editable path="Redeye"]
[editable path="Blueeye"]
[editable path="Greeneye"]
[editable path="SceneChangeTrigger"]
