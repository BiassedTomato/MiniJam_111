[gd_scene load_steps=33 format=2]

[ext_resource path="res://Fabs/Base.tscn" type="PackedScene" id=1]
[ext_resource path="res://Fabs/Doppel.tscn" type="PackedScene" id=2]
[ext_resource path="res://ShroomShader.tres" type="Shader" id=3]
[ext_resource path="res://Fabs/Shroom.tscn" type="PackedScene" id=4]
[ext_resource path="res://Fabs/Eye.tscn" type="PackedScene" id=5]
[ext_resource path="res://SceneChangeTrigger.tscn" type="PackedScene" id=6]

[sub_resource type="ShaderMaterial" id=29]
resource_local_to_scene = true
shader = ExtResource( 3 )
shader_param/red = false
shader_param/green = false
shader_param/blue = false

[sub_resource type="Shader" id=2]
resource_local_to_scene = true
code = "shader_type canvas_item;

uniform bool red;
uniform bool green;
uniform bool blue;

uniform bool alpha;

void fragment()
{
	float rv=0f;
	float gv=0f;
	float bv=0f;
	
	float av=0f;
	
	if(!red)
		rv=0.85f;
	if(!green)
		gv=0.85f;
	if(!blue)
		bv=0.85f;
		
	if(!alpha)
		av=0.85f;
		
		vec4 pix=texture(TEXTURE,UV);
		
	if(!green&&!red&&!blue)
	{
		COLOR=vec4(0f,0f,0f,0f);
	}
	else
		COLOR=vec4(max(pix.r-rv,0.15f),max(pix.g-gv,0.15f),max(pix.b-bv,0.15f),pix.a);
	
	
}"

[sub_resource type="ShaderMaterial" id=3]
resource_local_to_scene = true
shader = SubResource( 2 )
shader_param/red = true
shader_param/green = false
shader_param/blue = false
shader_param/alpha = false

[sub_resource type="Shader" id=4]
resource_local_to_scene = true
code = "shader_type canvas_item;

uniform bool red;
uniform bool green;
uniform bool blue;

uniform bool alpha;

void fragment()
{
	float rv=0f;
	float gv=0f;
	float bv=0f;
	
	float av=0f;
	
	if(!red)
		rv=0.85f;
	if(!green)
		gv=0.85f;
	if(!blue)
		bv=0.85f;
		
	if(!alpha)
		av=0.85f;
		
		vec4 pix=texture(TEXTURE,UV);
		
	if(!green&&!red&&!blue)
	{
		COLOR=vec4(0f,0f,0f,0f);
	}
	else
		COLOR=vec4(max(pix.r-rv,0.15f),max(pix.g-gv,0.15f),max(pix.b-bv,0.15f),pix.a);
	
	
}"

[sub_resource type="ShaderMaterial" id=5]
resource_local_to_scene = true
shader = SubResource( 4 )
shader_param/red = true
shader_param/green = false
shader_param/blue = false
shader_param/alpha = false

[sub_resource type="Shader" id=6]
resource_local_to_scene = true
code = "shader_type canvas_item;

uniform bool red;
uniform bool green;
uniform bool blue;

uniform bool alpha;

void fragment()
{
	float rv=0f;
	float gv=0f;
	float bv=0f;
	
	float av=0f;
	
	if(!red)
		rv=0.85f;
	if(!green)
		gv=0.85f;
	if(!blue)
		bv=0.85f;
		
	if(!alpha)
		av=0.85f;
		
		vec4 pix=texture(TEXTURE,UV);
		
	if(!green&&!red&&!blue)
	{
		COLOR=vec4(0f,0f,0f,0f);
	}
	else
		COLOR=vec4(max(pix.r-rv,0.15f),max(pix.g-gv,0.15f),max(pix.b-bv,0.15f),pix.a);
	
	
}"

[sub_resource type="ShaderMaterial" id=7]
resource_local_to_scene = true
shader = SubResource( 6 )
shader_param/red = false
shader_param/green = true
shader_param/blue = false
shader_param/alpha = false

[sub_resource type="Shader" id=8]
resource_local_to_scene = true
code = "shader_type canvas_item;

uniform bool red;
uniform bool green;
uniform bool blue;

uniform bool alpha;

void fragment()
{
	float rv=0f;
	float gv=0f;
	float bv=0f;
	
	float av=0f;
	
	if(!red)
		rv=0.85f;
	if(!green)
		gv=0.85f;
	if(!blue)
		bv=0.85f;
		
	if(!alpha)
		av=0.85f;
		
		vec4 pix=texture(TEXTURE,UV);
		
	if(!green&&!red&&!blue)
	{
		COLOR=vec4(0f,0f,0f,0f);
	}
	else
		COLOR=vec4(max(pix.r-rv,0.15f),max(pix.g-gv,0.15f),max(pix.b-bv,0.15f),pix.a);
	
	
}"

[sub_resource type="ShaderMaterial" id=9]
resource_local_to_scene = true
shader = SubResource( 8 )
shader_param/red = false
shader_param/green = true
shader_param/blue = false
shader_param/alpha = false

[sub_resource type="Shader" id=10]
resource_local_to_scene = true
code = "shader_type canvas_item;

uniform bool red;
uniform bool green;
uniform bool blue;

uniform bool alpha;

void fragment()
{
	float rv=0f;
	float gv=0f;
	float bv=0f;
	
	float av=0f;
	
	if(!red)
		rv=0.85f;
	if(!green)
		gv=0.85f;
	if(!blue)
		bv=0.85f;
		
	if(!alpha)
		av=0.85f;
		
		vec4 pix=texture(TEXTURE,UV);
		
	if(!green&&!red&&!blue)
	{
		COLOR=vec4(0f,0f,0f,0f);
	}
	else
		COLOR=vec4(max(pix.r-rv,0.15f),max(pix.g-gv,0.15f),max(pix.b-bv,0.15f),pix.a);
	
	
}"

[sub_resource type="ShaderMaterial" id=11]
resource_local_to_scene = true
shader = SubResource( 10 )
shader_param/red = false
shader_param/green = false
shader_param/blue = true
shader_param/alpha = false

[sub_resource type="Shader" id=12]
resource_local_to_scene = true
code = "shader_type canvas_item;

uniform bool red;
uniform bool green;
uniform bool blue;

uniform bool alpha;

void fragment()
{
	float rv=0f;
	float gv=0f;
	float bv=0f;
	
	float av=0f;
	
	if(!red)
		rv=0.85f;
	if(!green)
		gv=0.85f;
	if(!blue)
		bv=0.85f;
		
	if(!alpha)
		av=0.85f;
		
		vec4 pix=texture(TEXTURE,UV);
		
	if(!green&&!red&&!blue)
	{
		COLOR=vec4(0f,0f,0f,0f);
	}
	else
		COLOR=vec4(max(pix.r-rv,0.15f),max(pix.g-gv,0.15f),max(pix.b-bv,0.15f),pix.a);
	
	
}"

[sub_resource type="ShaderMaterial" id=13]
resource_local_to_scene = true
shader = SubResource( 12 )
shader_param/red = false
shader_param/green = false
shader_param/blue = true
shader_param/alpha = false

[sub_resource type="Shader" id=30]
resource_local_to_scene = true
code = "shader_type canvas_item;

uniform bool red;
uniform bool green;
uniform bool blue;

void fragment()
{
	if(!red&&!green&&!blue)
	{
		COLOR=vec4(0f,0f,0f,0f);
		
		return;
	}
	
	vec4 pix=texture(TEXTURE,UV);
	
	vec4 final=vec4(0f,0f,0f,pix.a);
	
	if(red)
		final.r=1f;
	if(green)
		final.g=1f;
	if(blue)
		final.b=1f;
	
	
	COLOR=final;
}"

[sub_resource type="ShaderMaterial" id=31]
resource_local_to_scene = true
shader = SubResource( 30 )
shader_param/red = true
shader_param/green = true
shader_param/blue = true

[sub_resource type="Shader" id=16]
resource_local_to_scene = true
code = "shader_type canvas_item;

uniform bool red;
uniform bool green;
uniform bool blue;

uniform bool alpha;

float nrand(vec2 co){
    return fract(sin(dot(co.xy ,vec2(12.9898,78.233))) * 43758.5453);
}

void fragment()
{
	float rv=0f;
	float gv=0f;
	float bv=0f;
	
	float av=0f;
	
	vec4 pix=texture(TEXTURE,UV);
	
	if(!red&&!green&&!blue)
	{
		if(pix.a>0f)
		{
			
		float c=nrand(vec2(TIME+UV.x,TIME+UV.y));
		COLOR=vec4(c,c,c,1f);
		}
		else
		{
			COLOR=vec4(0f,0f,0f,0f);
		}
		
	}
	else{
		
	
	if(!red)
		rv=0.85f;
	if(!green)
		gv=0.85f;
	if(!blue)
		bv=0.85f;
		
	if(!alpha)
		av=0.85f;
		
		
	if(!green&&!red&&!blue)
	{
		COLOR=vec4(0f,0f,0f,0f);
	}
	else
		COLOR=vec4(max(pix.r-rv,0.15f),max(pix.g-gv,0.15f),max(pix.b-bv,0.15f),pix.a);
	
	}
	
} "

[sub_resource type="ShaderMaterial" id=17]
resource_local_to_scene = true
shader = SubResource( 16 )
shader_param/red = true
shader_param/green = true
shader_param/blue = true
shader_param/alpha = false

[sub_resource type="Shader" id=18]
resource_local_to_scene = true
code = "shader_type canvas_item;

uniform bool red;
uniform bool green;
uniform bool blue;

uniform bool alpha;

float nrand(vec2 co){
    return fract(sin(dot(co.xy ,vec2(12.9898,78.233))) * 43758.5453);
}

void fragment()
{
	float rv=0f;
	float gv=0f;
	float bv=0f;
	
	float av=0f;
	
	vec4 pix=texture(TEXTURE,UV);
	
	if(!red&&!green&&!blue)
	{
		if(pix.a>0f)
		{
			
		float c=nrand(vec2(TIME+UV.x,TIME+UV.y));
		COLOR=vec4(c,c,c,1f);
		}
		else
		{
			COLOR=vec4(0f,0f,0f,0f);
		}
		
	}
	else{
		
	
	if(!red)
		rv=0.85f;
	if(!green)
		gv=0.85f;
	if(!blue)
		bv=0.85f;
		
	if(!alpha)
		av=0.85f;
		
		
	if(!green&&!red&&!blue)
	{
		COLOR=vec4(0f,0f,0f,0f);
	}
	else
		COLOR=vec4(max(pix.r-rv,0.15f),max(pix.g-gv,0.15f),max(pix.b-bv,0.15f),pix.a);
	
	}
	
} "

[sub_resource type="ShaderMaterial" id=19]
resource_local_to_scene = true
shader = SubResource( 18 )
shader_param/red = true
shader_param/green = true
shader_param/blue = true
shader_param/alpha = false

[sub_resource type="Shader" id=22]
resource_local_to_scene = true
code = "shader_type canvas_item;

uniform bool red;
uniform bool green;
uniform bool blue;

uniform bool alpha;

float nrand(vec2 co){
    return fract(sin(dot(co.xy ,vec2(12.9898,78.233))) * 43758.5453);
}

void fragment()
{
	float rv=0f;
	float gv=0f;
	float bv=0f;
	
	float av=0f;
	
	vec4 pix=texture(TEXTURE,UV);
	
	if(!red&&!green&&!blue)
	{
		if(pix.a>0f)
		{
			
		float c=nrand(vec2(TIME+UV.x,TIME+UV.y));
		COLOR=vec4(c,c,c,1f);
		}
		else
		{
			COLOR=vec4(0f,0f,0f,0f);
		}
		
	}
	else{
		
	
	if(!red)
		rv=0.85f;
	if(!green)
		gv=0.85f;
	if(!blue)
		bv=0.85f;
		
	if(!alpha)
		av=0.85f;
		
		
	if(!green&&!red&&!blue)
	{
		COLOR=vec4(0f,0f,0f,0f);
	}
	else
		COLOR=vec4(max(pix.r-rv,0.15f),max(pix.g-gv,0.15f),max(pix.b-bv,0.15f),pix.a);
	
	}
	
} "

[sub_resource type="ShaderMaterial" id=23]
resource_local_to_scene = true
shader = SubResource( 22 )
shader_param/red = true
shader_param/green = true
shader_param/blue = true
shader_param/alpha = false

[sub_resource type="Shader" id=24]
resource_local_to_scene = true
code = "shader_type canvas_item;

uniform bool red;
uniform bool green;
uniform bool blue;

uniform bool alpha;

float nrand(vec2 co){
    return fract(sin(dot(co.xy ,vec2(12.9898,78.233))) * 43758.5453);
}

void fragment()
{
	float rv=0f;
	float gv=0f;
	float bv=0f;
	
	float av=0f;
	
	vec4 pix=texture(TEXTURE,UV);
	
	if(!red&&!green&&!blue)
	{
		if(pix.a>0f)
		{
			
		float c=nrand(vec2(TIME+UV.x,TIME+UV.y));
		COLOR=vec4(c,c,c,1f);
		}
		else
		{
			COLOR=vec4(0f,0f,0f,0f);
		}
		
	}
	else{
		
	
	if(!red)
		rv=0.85f;
	if(!green)
		gv=0.85f;
	if(!blue)
		bv=0.85f;
		
	if(!alpha)
		av=0.85f;
		
		
	if(!green&&!red&&!blue)
	{
		COLOR=vec4(0f,0f,0f,0f);
	}
	else
		COLOR=vec4(max(pix.r-rv,0.15f),max(pix.g-gv,0.15f),max(pix.b-bv,0.15f),pix.a);
	
	}
	
} "

[sub_resource type="ShaderMaterial" id=25]
resource_local_to_scene = true
shader = SubResource( 24 )
shader_param/red = true
shader_param/green = true
shader_param/blue = true
shader_param/alpha = false

[sub_resource type="Shader" id=26]
resource_local_to_scene = true
code = "shader_type canvas_item;

uniform bool red;
uniform bool green;
uniform bool blue;

uniform bool alpha;

float nrand(vec2 co){
    return fract(sin(dot(co.xy ,vec2(12.9898,78.233))) * 43758.5453);
}

void fragment()
{
	float rv=0f;
	float gv=0f;
	float bv=0f;
	
	float av=0f;
	
	vec4 pix=texture(TEXTURE,UV);
	
	if(!red&&!green&&!blue)
	{
		if(pix.a>0f)
		{
			
		float c=nrand(vec2(TIME+UV.x,TIME+UV.y));
		COLOR=vec4(c,c,c,1f);
		}
		else
		{
			COLOR=vec4(0f,0f,0f,0f);
		}
		
	}
	else{
		
	
	if(!red)
		rv=0.85f;
	if(!green)
		gv=0.85f;
	if(!blue)
		bv=0.85f;
		
	if(!alpha)
		av=0.85f;
		
		
	if(!green&&!red&&!blue)
	{
		COLOR=vec4(0f,0f,0f,0f);
	}
	else
		COLOR=vec4(max(pix.r-rv,0.15f),max(pix.g-gv,0.15f),max(pix.b-bv,0.15f),pix.a);
	
	}
	
} "

[sub_resource type="ShaderMaterial" id=27]
resource_local_to_scene = true
shader = SubResource( 26 )
shader_param/red = true
shader_param/green = true
shader_param/blue = true
shader_param/alpha = false

[sub_resource type="RectangleShape2D" id=28]
resource_local_to_scene = true
extents = Vector2( 23.5, 8 )

[node name="Base" instance=ExtResource( 1 )]
DefaultRedEnabled = true
DefaultGreenEnabled = true
DefaultBlueEnabled = true

[node name="RichTextLabel" parent="CanvasLayer" index="0"]
margin_left = -98.5
margin_right = 98.5
text = "I AM THOU, THOU ART I"

[node name="Bounds" parent="." index="1"]
tile_data = PoolIntArray( -65550, 5, 65536, -65549, 5, 65537, -65548, 5, 65537, -65547, 5, 65537, -65546, 5, 65537, -65545, 5, 65537, -65544, 5, 65537, -65543, 5, 65537, -65542, 5, 65537, -65541, 5, 65537, -65540, 5, 65537, -65539, 5, 65537, -65538, 5, 65537, -65537, 5, 65537, -131072, 5, 65537, -131071, 5, 65537, -131070, 5, 65537, -131069, 5, 65537, -131068, 5, 65537, -131067, 5, 65537, -131066, 5, 65537, -131065, 5, 65537, -131064, 5, 65537, -131063, 5, 65537, -131062, 5, 65537, -131061, 5, 65537, -131060, 5, 65537, -131059, 5, 65537, -131058, 5, 65537, -131057, 5, 65537, -131056, 5, 65537, -131055, 5, 65537, -131054, 5, 65537, -131053, 5, 65537, -131052, 5, 65537, -131051, 5, 65537, -131050, 5, 65538, -14, 5, 131072, -13, 5, 131073, -12, 5, 131073, -11, 5, 131073, -10, 5, 131073, -9, 5, 131073, -8, 5, 131073, -7, 5, 131073, -6, 5, 131073, -5, 5, 131073, -4, 5, 131073, -3, 5, 131073, -2, 5, 131073, -1, 5, 131073, -65536, 5, 131073, -65535, 5, 131073, -65534, 5, 131073, -65533, 5, 131073, -65532, 5, 131073, -65531, 5, 131073, -65530, 5, 131073, -65529, 5, 131073, -65528, 5, 131073, -65527, 5, 131073, -65526, 5, 131073, -65525, 5, 131073, -65524, 5, 131073, -65523, 5, 131073, -65522, 5, 131073, -65521, 5, 131073, -65520, 5, 131073, -65519, 5, 131073, -65518, 5, 131073, -65517, 5, 131073, -65516, 5, 131073, -65515, 5, 131073, -65514, 5, 131074, 65522, 5, 131072, 65523, 5, 131073, 65524, 5, 131073, 65525, 5, 131073, 65526, 5, 131073, 65527, 5, 131073, 65528, 5, 131073, 65529, 5, 131073, 65530, 5, 131073, 65531, 5, 131073, 65532, 5, 131073, 65533, 5, 131073, 65534, 5, 131073, 65535, 5, 131073, 0, 5, 131073, 1, 5, 131073, 2, 5, 131073, 3, 5, 131073, 4, 5, 131073, 5, 5, 131073, 6, 5, 131073, 7, 5, 131073, 8, 5, 131073, 9, 5, 131073, 10, 5, 131073, 11, 5, 131073, 12, 5, 131073, 13, 5, 131073, 14, 5, 131073, 15, 5, 131073, 16, 5, 131073, 17, 5, 131073, 18, 5, 131073, 19, 5, 131073, 20, 5, 131073, 21, 5, 131073, 22, 5, 131074, 131058, 5, 131072, 131059, 5, 131073, 131060, 5, 131073, 131061, 5, 131073, 131062, 5, 131073, 131063, 5, 131073, 131064, 5, 131073, 131065, 5, 131073, 131066, 5, 131073, 131067, 5, 131073, 131068, 5, 131073, 131069, 5, 131073, 131070, 5, 131073, 131071, 5, 131073, 65536, 5, 131073, 65537, 5, 131073, 65538, 5, 131073, 65539, 5, 131073, 65540, 5, 131073, 65541, 5, 131073, 65542, 5, 131073, 65543, 5, 131073, 65544, 5, 131073, 65545, 5, 131073, 65546, 5, 131073, 65547, 5, 131073, 65548, 5, 131073, 65549, 5, 131073, 65550, 5, 131073, 65551, 5, 131073, 65552, 5, 131073, 65553, 5, 131073, 65554, 5, 131073, 65555, 5, 131073, 65556, 5, 131073, 65557, 5, 131073, 65558, 5, 131074, 196594, 5, 131072, 196595, 5, 131073, 196596, 5, 131073, 196597, 5, 131073, 196598, 5, 131073, 196599, 5, 131073, 196600, 5, 131073, 196601, 5, 131073, 196602, 5, 131073, 196603, 5, 131073, 196604, 5, 131073, 196605, 5, 131073, 196606, 5, 131073, 196607, 5, 131073, 131072, 5, 131073, 131073, 5, 131073, 131074, 5, 131073, 131075, 5, 131073, 131076, 5, 131073, 131077, 5, 131073, 131078, 5, 131073, 131079, 5, 131073, 131080, 5, 131073, 131081, 5, 131073, 131082, 5, 131073, 131083, 5, 131073, 131084, 5, 131073, 131085, 5, 131073, 131086, 5, 131073, 131087, 5, 131073, 131088, 5, 131073, 131089, 5, 131073, 131090, 5, 131073, 131091, 5, 131073, 131092, 5, 131073, 131093, 5, 131073, 131094, 5, 131074, 262130, 5, 131072, 262131, 5, 131073, 262132, 5, 131073, 262133, 5, 131073, 262134, 5, 131073, 262135, 5, 131073, 262136, 5, 131073, 262137, 5, 131073, 262138, 5, 131073, 262139, 5, 131073, 262140, 5, 131073, 262141, 5, 131073, 262142, 5, 131073, 262143, 5, 3, 196608, 5, 196609, 196609, 5, 196609, 196610, 5, 196609, 196611, 5, 196609, 196612, 5, 196609, 196613, 5, 196609, 196614, 5, 196609, 196615, 5, 196609, 196616, 5, 196609, 196617, 5, 196609, 196618, 5, 196609, 196619, 5, 196609, 196620, 5, 4, 196621, 5, 131073, 196622, 5, 131073, 196623, 5, 131073, 196624, 5, 131073, 196625, 5, 131073, 196626, 5, 131073, 196627, 5, 131073, 196628, 5, 131073, 196629, 5, 131073, 196630, 5, 131074, 327666, 5, 131072, 327667, 5, 131073, 327668, 5, 131073, 327669, 5, 131073, 327670, 5, 131073, 327671, 5, 131073, 327672, 5, 131073, 327673, 5, 131073, 327674, 5, 131073, 327675, 5, 131073, 327676, 5, 131073, 327677, 5, 131073, 327678, 5, 131073, 327679, 5, 131074, 262156, 5, 131072, 262157, 5, 131073, 262158, 5, 131073, 262159, 5, 131073, 262160, 5, 131073, 262161, 5, 131073, 262162, 5, 131073, 262163, 5, 131073, 262164, 5, 131073, 262165, 5, 131073, 262166, 5, 131074, 393202, 5, 131072, 393203, 5, 131073, 393204, 5, 131073, 393205, 5, 131073, 393206, 5, 131073, 393207, 5, 131073, 393208, 5, 131073, 393209, 5, 131073, 393210, 5, 131073, 393211, 5, 131073, 393212, 5, 131073, 393213, 5, 131073, 393214, 5, 131073, 393215, 5, 131074, 327681, 5, 65536, 327682, 5, 65537, 327683, 5, 65537, 327684, 5, 65537, 327685, 5, 65537, 327686, 5, 65537, 327687, 5, 131073, 327688, 5, 131073, 327689, 5, 131073, 327690, 5, 65538, 327692, 5, 131072, 327693, 5, 131073, 327694, 5, 131073, 327695, 5, 131073, 327696, 5, 131073, 327697, 5, 131073, 327698, 5, 131073, 327699, 5, 131073, 327700, 5, 131073, 327701, 5, 131073, 327702, 5, 131074, 458738, 5, 131072, 458739, 5, 131073, 458740, 5, 131073, 458741, 5, 131073, 458742, 5, 131073, 458743, 5, 131073, 458744, 5, 131073, 458745, 5, 131073, 458746, 5, 131073, 458747, 5, 131073, 458748, 5, 131073, 458749, 5, 131073, 458750, 5, 131073, 458751, 5, 131074, 393217, 5, 196608, 393218, 5, 4, 393219, 5, 131073, 393220, 5, 131073, 393221, 5, 131073, 393222, 5, 131073, 393223, 5, 131073, 393224, 5, 131073, 393225, 5, 131073, 393226, 5, 131074, 393228, 5, 131072, 393229, 5, 131073, 393230, 5, 131073, 393231, 5, 131073, 393232, 5, 131073, 393233, 5, 131073, 393234, 5, 131073, 393235, 5, 131073, 393236, 5, 131073, 393237, 5, 131073, 393238, 5, 131074, 524274, 5, 131072, 524275, 5, 131073, 524276, 5, 131073, 524277, 5, 131073, 524278, 5, 131073, 524279, 5, 131073, 524280, 5, 131073, 524281, 5, 131073, 524282, 5, 131073, 524283, 5, 131073, 524284, 5, 131073, 524285, 5, 131073, 524286, 5, 131073, 524287, 5, 131074, 458754, 5, 131072, 458755, 5, 131073, 458756, 5, 131073, 458757, 5, 131073, 458758, 5, 131073, 458759, 5, 131073, 458760, 5, 131073, 458761, 5, 131073, 458762, 5, 131074, 458764, 5, 131072, 458765, 5, 131073, 458766, 5, 131073, 458767, 5, 131073, 458768, 5, 131073, 458769, 5, 131073, 458770, 5, 131073, 458771, 5, 131073, 458772, 5, 131073, 458773, 5, 131073, 458774, 5, 131074, 589810, 5, 131072, 589811, 5, 131073, 589812, 5, 131073, 589813, 5, 131073, 589814, 5, 131073, 589815, 5, 131073, 589816, 5, 131073, 589817, 5, 131073, 589818, 5, 131073, 589819, 5, 131073, 589820, 5, 131073, 589821, 5, 131073, 589822, 5, 131073, 589823, 5, 131074, 524290, 5, 131072, 524291, 5, 131073, 524292, 5, 131073, 524293, 5, 131073, 524294, 5, 131073, 524295, 5, 131073, 524296, 5, 131073, 524297, 5, 131073, 524298, 5, 131074, 524300, 5, 131072, 524301, 5, 131073, 524302, 5, 131073, 524303, 5, 131073, 524304, 5, 131073, 524305, 5, 131073, 524306, 5, 131073, 524307, 5, 131073, 524308, 5, 131073, 524309, 5, 131073, 524310, 5, 131074, 655346, 5, 131072, 655347, 5, 131073, 655348, 5, 131073, 655349, 5, 131073, 655350, 5, 131073, 655351, 5, 131073, 655352, 5, 131073, 655353, 5, 131073, 655354, 5, 131073, 655355, 5, 131073, 655356, 5, 131073, 655357, 5, 131073, 655358, 5, 131073, 655359, 5, 131074, 589826, 5, 131072, 589827, 5, 131073, 589828, 5, 131073, 589829, 5, 131073, 589830, 5, 131073, 589831, 5, 131073, 589832, 5, 131073, 589833, 5, 131073, 589834, 5, 131074, 589836, 5, 131072, 589837, 5, 131073, 589838, 5, 131073, 589839, 5, 131073, 589840, 5, 131073, 589841, 5, 131073, 589842, 5, 131073, 589843, 5, 131073, 589844, 5, 131073, 589845, 5, 131073, 589846, 5, 131074, 720882, 5, 131072, 720883, 5, 131073, 720884, 5, 131073, 720885, 5, 131073, 720886, 5, 131073, 720887, 5, 131073, 720888, 5, 131073, 720889, 5, 131073, 720890, 5, 131073, 720891, 5, 131073, 720892, 5, 131073, 720893, 5, 131073, 720894, 5, 131073, 720895, 5, 131074, 655361, 5, 65536, 655362, 5, 65540, 655363, 5, 131073, 655364, 5, 131073, 655365, 5, 131073, 655366, 5, 131073, 655367, 5, 131073, 655368, 5, 131073, 655369, 5, 131073, 655370, 5, 131074, 655372, 5, 131072, 655373, 5, 131073, 655374, 5, 131073, 655375, 5, 131073, 655376, 5, 131073, 655377, 5, 131073, 655378, 5, 131073, 655379, 5, 131073, 655380, 5, 131073, 655381, 5, 131073, 655382, 5, 131074, 786418, 5, 131072, 786419, 5, 131073, 786420, 5, 131073, 786421, 5, 131073, 786422, 5, 131073, 786423, 5, 131073, 786424, 5, 131073, 786425, 5, 131073, 786426, 5, 131073, 786427, 5, 131073, 786428, 5, 131073, 786429, 5, 131073, 786430, 5, 131073, 786431, 5, 131074, 720897, 5, 196608, 720898, 5, 196609, 720899, 5, 196609, 720900, 5, 196609, 720901, 5, 196609, 720902, 5, 196609, 720903, 5, 196609, 720904, 5, 196609, 720905, 5, 196609, 720906, 5, 196610, 720908, 5, 131072, 720909, 5, 131073, 720910, 5, 131073, 720911, 5, 131073, 720912, 5, 131073, 720913, 5, 131073, 720914, 5, 131073, 720915, 5, 131073, 720916, 5, 131073, 720917, 5, 131073, 720918, 5, 131074, 851954, 5, 131072, 851955, 5, 131073, 851956, 5, 131073, 851957, 5, 131073, 851958, 5, 131073, 851959, 5, 131073, 851960, 5, 131073, 851961, 5, 131073, 851962, 5, 131073, 851963, 5, 131073, 851964, 5, 131073, 851965, 5, 131073, 851966, 5, 131073, 851967, 5, 131074, 786444, 5, 131072, 786445, 5, 131073, 786446, 5, 131073, 786447, 5, 131073, 786448, 5, 131073, 786449, 5, 131073, 786450, 5, 131073, 786451, 5, 131073, 786452, 5, 131073, 786453, 5, 131073, 786454, 5, 131074, 917490, 5, 131072, 917491, 5, 131073, 917492, 5, 131073, 917493, 5, 131073, 917494, 5, 131073, 917495, 5, 131073, 917496, 5, 131073, 917497, 5, 131073, 917498, 5, 131073, 917499, 5, 131073, 917500, 5, 131073, 917501, 5, 131073, 917502, 5, 131073, 917503, 5, 65539, 851968, 5, 65537, 851969, 5, 65537, 851970, 5, 65537, 851971, 5, 65537, 851972, 5, 65537, 851973, 5, 65537, 851974, 5, 65537, 851975, 5, 65537, 851976, 5, 65537, 851977, 5, 65537, 851978, 5, 65537, 851979, 5, 65537, 851980, 5, 65540, 851981, 5, 131073, 851982, 5, 131073, 851983, 5, 131073, 851984, 5, 131073, 851985, 5, 131073, 851986, 5, 131073, 851987, 5, 131073, 851988, 5, 131073, 851989, 5, 131073, 851990, 5, 131074, 983026, 5, 131072, 983027, 5, 131073, 983028, 5, 131073, 983029, 5, 131073, 983030, 5, 131073, 983031, 5, 131073, 983032, 5, 131073, 983033, 5, 131073, 983034, 5, 131073, 983035, 5, 131073, 983036, 5, 131073, 983037, 5, 131073, 983038, 5, 131073, 983039, 5, 131073, 917504, 5, 131073, 917505, 5, 131073, 917506, 5, 131073, 917507, 5, 131073, 917508, 5, 131073, 917509, 5, 131073, 917510, 5, 131073, 917511, 5, 131073, 917512, 5, 131073, 917513, 5, 131073, 917514, 5, 131073, 917515, 5, 131073, 917516, 5, 131073, 917517, 5, 131073, 917518, 5, 131073, 917519, 5, 131073, 917520, 5, 131073, 917521, 5, 131073, 917522, 5, 131073, 917523, 5, 131073, 917524, 5, 131073, 917525, 5, 131073, 917526, 5, 131074, 1048562, 5, 131072, 1048563, 5, 131073, 1048564, 5, 131073, 1048565, 5, 131073, 1048566, 5, 131073, 1048567, 5, 131073, 1048568, 5, 131073, 1048569, 5, 131073, 1048570, 5, 131073, 1048571, 5, 131073, 1048572, 5, 131073, 1048573, 5, 131073, 1048574, 5, 131073, 1048575, 5, 131073, 983040, 5, 131073, 983041, 5, 131073, 983042, 5, 131073, 983043, 5, 131073, 983044, 5, 131073, 983045, 5, 131073, 983046, 5, 131073, 983047, 5, 131073, 983048, 5, 131073, 983049, 5, 131073, 983050, 5, 131073, 983051, 5, 131073, 983052, 5, 131073, 983053, 5, 131073, 983054, 5, 131073, 983055, 5, 131073, 983056, 5, 131073, 983057, 5, 131073, 983058, 5, 131073, 983059, 5, 131073, 983060, 5, 131073, 983061, 5, 131073, 983062, 5, 131074, 1114098, 5, 131072, 1114099, 5, 131073, 1114100, 5, 131073, 1114101, 5, 131073, 1114102, 5, 131073, 1114103, 5, 131073, 1114104, 5, 131073, 1114105, 5, 131073, 1114106, 5, 131073, 1114107, 5, 131073, 1114108, 5, 131073, 1114109, 5, 131073, 1114110, 5, 131073, 1114111, 5, 131073, 1048576, 5, 131073, 1048577, 5, 131073, 1048578, 5, 131073, 1048579, 5, 131073, 1048580, 5, 131073, 1048581, 5, 131073, 1048582, 5, 131073, 1048583, 5, 131073, 1048584, 5, 131073, 1048585, 5, 131073, 1048586, 5, 131073, 1048587, 5, 131073, 1048588, 5, 131073, 1048589, 5, 131073, 1048590, 5, 131073, 1048591, 5, 131073, 1048592, 5, 131073, 1048593, 5, 131073, 1048594, 5, 131073, 1048595, 5, 131073, 1048596, 5, 131073, 1048597, 5, 131073, 1048598, 5, 131074, 1179634, 5, 196608, 1179635, 5, 196609, 1179636, 5, 196609, 1179637, 5, 196609, 1179638, 5, 196609, 1179639, 5, 196609, 1179640, 5, 196609, 1179641, 5, 196609, 1179642, 5, 196609, 1179643, 5, 196609, 1179644, 5, 196609, 1179645, 5, 196609, 1179646, 5, 196609, 1179647, 5, 196609, 1114112, 5, 196609, 1114113, 5, 196609, 1114114, 5, 196609, 1114115, 5, 196609, 1114116, 5, 196609, 1114117, 5, 196609, 1114118, 5, 196609, 1114119, 5, 196609, 1114120, 5, 196609, 1114121, 5, 196609, 1114122, 5, 196609, 1114123, 5, 196609, 1114124, 5, 196609, 1114125, 5, 196609, 1114126, 5, 196609, 1114127, 5, 196609, 1114128, 5, 196609, 1114129, 5, 196609, 1114130, 5, 196609, 1114131, 5, 196609, 1114132, 5, 196609, 1114133, 5, 196609, 1114134, 5, 196610 )

[node name="Character" parent="." index="2"]
position = Vector2( 88, 117 )

[node name="AnimatedSprite" parent="Character" index="2"]
material = SubResource( 29 )

[node name="Camera2D" parent="." index="3"]
position = Vector2( 88, 117 )

[node name="RedWalls" parent="." index="4"]
material = SubResource( 3 )
tile_data = PoolIntArray( 458739, 2, 0, 458740, 2, 1, 458741, 2, 1, 458742, 2, 1, 458743, 2, 1, 458744, 2, 1, 458745, 2, 1, 458746, 2, 1, 458747, 2, 1, 458748, 2, 1, 458749, 2, 2, 524275, 2, 131072, 524276, 2, 131073, 524277, 2, 131073, 524278, 2, 131073, 524279, 2, 131073, 524280, 2, 131073, 524281, 2, 131073, 524282, 2, 131073, 524283, 2, 131073, 524284, 2, 196609, 524285, 2, 65538, 458756, 2, 0, 458757, 2, 1, 458758, 2, 2, 589820, 2, 65536, 589821, 2, 65538, 524292, 2, 65536, 524293, 2, 65537, 524294, 2, 65538, 655356, 2, 65536, 655357, 2, 65538, 589828, 2, 131072, 589829, 2, 131073, 589830, 2, 131074, 720892, 2, 65536, 720893, 2, 65538, 786428, 2, 65536, 786429, 2, 65538, 851964, 2, 65536, 851965, 2, 65538, 917500, 2, 65536, 917501, 2, 65538, 983036, 2, 65536, 983037, 2, 65538, 1048572, 2, 65536, 1048573, 2, 65538, 1114108, 2, 131072, 1114109, 2, 131074 )

[node name="RedPaths" parent="." index="5"]
material = SubResource( 5 )

[node name="GreenWalls" parent="." index="6"]
material = SubResource( 7 )
tile_data = PoolIntArray( 65523, 2, 0, 65524, 2, 1, 65525, 2, 1, 65526, 2, 1, 65527, 2, 2, 131059, 2, 65536, 131060, 2, 65537, 131061, 2, 65537, 131062, 2, 65537, 131063, 2, 65538, 196595, 2, 65536, 196596, 2, 65537, 196597, 2, 65537, 196598, 2, 65537, 196599, 2, 65538, 262131, 2, 65536, 262132, 2, 65537, 262133, 2, 65537, 262134, 2, 65537, 262135, 2, 65538, 327667, 2, 131072, 327668, 2, 131073, 327669, 2, 131073, 327670, 2, 131073, 327671, 2, 131074, 720885, 2, 0, 720886, 2, 1, 720887, 2, 1, 720888, 2, 1, 720889, 2, 2, 786421, 2, 65536, 786422, 2, 65537, 786423, 2, 65537, 786424, 2, 65537, 786425, 2, 65538, 851957, 2, 65536, 851958, 2, 65537, 851959, 2, 65537, 851960, 2, 65537, 851961, 2, 65538, 917493, 2, 65536, 917494, 2, 65537, 917495, 2, 65537, 917496, 2, 65537, 917497, 2, 65538, 983029, 2, 131072, 983030, 2, 131073, 983031, 2, 131073, 983032, 2, 131073, 983033, 2, 131074 )

[node name="GreenPaths" parent="." index="7"]
material = SubResource( 9 )

[node name="BlueWalls" parent="." index="8"]
material = SubResource( 11 )
tile_data = PoolIntArray( 15, 2, 0, 16, 2, 1, 17, 2, 1, 18, 2, 1, 19, 2, 2, 65551, 2, 65536, 65552, 2, 65537, 65553, 2, 65537, 65554, 2, 65537, 65555, 2, 65538, 131087, 2, 65536, 131088, 2, 65537, 131089, 2, 65537, 131090, 2, 65537, 131091, 2, 65538, 196623, 2, 65536, 196624, 2, 65537, 196625, 2, 65537, 196626, 2, 65537, 196627, 2, 65538, 262159, 2, 65536, 262160, 2, 65537, 262161, 2, 65537, 262162, 2, 65537, 262163, 2, 65538, 327695, 2, 65536, 327696, 2, 65537, 327697, 2, 65537, 327698, 2, 65537, 327699, 2, 65538, 393231, 2, 65536, 393232, 2, 65537, 393233, 2, 65537, 393234, 2, 65537, 393235, 2, 65538, 458767, 2, 65536, 458768, 2, 65537, 458769, 2, 65537, 458770, 2, 65537, 458771, 2, 65538, 589811, 2, 0, 589812, 2, 1, 589813, 2, 1, 589814, 2, 1, 589815, 2, 1, 589816, 2, 1, 589817, 2, 1, 589818, 2, 1, 589819, 2, 2, 524303, 2, 65536, 524304, 2, 65537, 524305, 2, 65537, 524306, 2, 65537, 524307, 2, 65538, 655347, 2, 65536, 655348, 2, 196608, 655349, 2, 131073, 655350, 2, 131073, 655351, 2, 131073, 655352, 2, 131073, 655353, 2, 131073, 655354, 2, 196609, 655355, 2, 65538, 589839, 2, 65536, 589840, 2, 65537, 589841, 2, 65537, 589842, 2, 65537, 589843, 2, 65538, 720883, 2, 65536, 720884, 2, 65538, 720890, 2, 65536, 720891, 2, 65538, 655375, 2, 65536, 655376, 2, 65537, 655377, 2, 65537, 655378, 2, 65537, 655379, 2, 65538, 786419, 2, 65536, 786420, 2, 65538, 786426, 2, 65536, 786427, 2, 65538, 720911, 2, 131072, 720912, 2, 131073, 720913, 2, 131073, 720914, 2, 131073, 720915, 2, 131074, 851955, 2, 65536, 851956, 2, 65538, 851962, 2, 65536, 851963, 2, 65538, 917491, 2, 65536, 917492, 2, 65538, 917498, 2, 65536, 917499, 2, 65538, 983027, 2, 65536, 983028, 2, 65538, 983034, 2, 65536, 983035, 2, 65538, 1048563, 2, 65536, 1048564, 2, 262144, 1048565, 2, 1, 1048566, 2, 1, 1048567, 2, 1, 1048568, 2, 1, 1048569, 2, 1, 1048570, 2, 262145, 1048571, 2, 65538, 1114099, 2, 131072, 1114100, 2, 131073, 1114101, 2, 131073, 1114102, 2, 131073, 1114103, 2, 131073, 1114104, 2, 131073, 1114105, 2, 131073, 1114106, 2, 131073, 1114107, 2, 131074 )

[node name="BluePaths" parent="." index="9"]
material = SubResource( 13 )

[node name="Doppel" parent="." index="10" groups=["Red"] instance=ExtResource( 2 )]
position = Vector2( -45, 16 )
collision_layer = 49
collision_mask = 49

[node name="AnimatedSprite" parent="Doppel" index="1"]
material = SubResource( 31 )

[node name="Shroom" parent="." index="11" instance=ExtResource( 4 )]
material = SubResource( 17 )
position = Vector2( -24, 157 )
Green = true

[node name="Shroom2" parent="." index="12" instance=ExtResource( 4 )]
material = SubResource( 19 )
position = Vector2( 222, 157 )

[node name="Eye" parent="." index="13" instance=ExtResource( 5 )]
position = Vector2( -167, 40 )
Color = 5

[node name="Eye2" parent="." index="14" instance=ExtResource( 5 )]
position = Vector2( -136, 197 )

[node name="Shroom4" parent="." index="15" instance=ExtResource( 4 )]
material = SubResource( 23 )
position = Vector2( 328, 255 )
Red = true
Green = true
Blue = true

[node name="Eye3" parent="." index="16" instance=ExtResource( 5 )]
position = Vector2( 280, 37 )
Color = 5

[node name="Shroom3" parent="." index="17" instance=ExtResource( 4 )]
material = SubResource( 25 )
position = Vector2( -126, 141 )
Green = true

[node name="Shroom5" parent="." index="18" instance=ExtResource( 4 )]
material = SubResource( 27 )
position = Vector2( 280, 149 )
Red = true

[node name="SceneChangeTrigger" parent="." index="19" instance=ExtResource( 6 )]
position = Vector2( 136, 64 )
ScenePath = "res://Fabs/Doorstuck.tscn"

[node name="CollisionShape2D" parent="SceneChangeTrigger" index="0"]
position = Vector2( 0.5, 8 )
shape = SubResource( 28 )

[editable path="Character"]
[editable path="Doppel"]
[editable path="SceneChangeTrigger"]
