[gd_scene load_steps=19 format=2]

[ext_resource path="res://Fabs/Base.tscn" type="PackedScene" id=1]
[ext_resource path="res://Fabs/Eye.tscn" type="PackedScene" id=2]
[ext_resource path="res://SceneChangeTrigger.tscn" type="PackedScene" id=3]
[ext_resource path="res://ShroomShader.tres" type="Shader" id=4]

[sub_resource type="ShaderMaterial" id=2]
resource_local_to_scene = true
shader = ExtResource( 4 )
shader_param/red = false
shader_param/green = false
shader_param/blue = false

[sub_resource type="Shader" id=3]
resource_local_to_scene = true
code = "shader_type canvas_item;

uniform bool red;
uniform bool green;
uniform bool blue;

uniform bool alpha;

void fragment()
{
	float rv=0f;
	float gv=0f;
	float bv=0f;
	
	float av=0f;
	
	if(!red)
		rv=0.85f;
	if(!green)
		gv=0.85f;
	if(!blue)
		bv=0.85f;
		
	if(!alpha)
		av=0.85f;
		
		vec4 pix=texture(TEXTURE,UV);
		
	if(!green&&!red&&!blue)
	{
		COLOR=vec4(0f,0f,0f,0f);
	}
	else
		COLOR=vec4(max(pix.r-rv,0.15f),max(pix.g-gv,0.15f),max(pix.b-bv,0.15f),pix.a);
	
	
}"

[sub_resource type="ShaderMaterial" id=4]
resource_local_to_scene = true
shader = SubResource( 3 )
shader_param/red = true
shader_param/green = false
shader_param/blue = false
shader_param/alpha = false

[sub_resource type="Shader" id=5]
resource_local_to_scene = true
code = "shader_type canvas_item;

uniform bool red;
uniform bool green;
uniform bool blue;

uniform bool alpha;

void fragment()
{
	float rv=0f;
	float gv=0f;
	float bv=0f;
	
	float av=0f;
	
	if(!red)
		rv=0.85f;
	if(!green)
		gv=0.85f;
	if(!blue)
		bv=0.85f;
		
	if(!alpha)
		av=0.85f;
		
		vec4 pix=texture(TEXTURE,UV);
		
	if(!green&&!red&&!blue)
	{
		COLOR=vec4(0f,0f,0f,0f);
	}
	else
		COLOR=vec4(max(pix.r-rv,0.15f),max(pix.g-gv,0.15f),max(pix.b-bv,0.15f),pix.a);
	
	
}"

[sub_resource type="ShaderMaterial" id=6]
resource_local_to_scene = true
shader = SubResource( 5 )
shader_param/red = true
shader_param/green = false
shader_param/blue = false
shader_param/alpha = false

[sub_resource type="Shader" id=7]
resource_local_to_scene = true
code = "shader_type canvas_item;

uniform bool red;
uniform bool green;
uniform bool blue;

uniform bool alpha;

void fragment()
{
	float rv=0f;
	float gv=0f;
	float bv=0f;
	
	float av=0f;
	
	if(!red)
		rv=0.85f;
	if(!green)
		gv=0.85f;
	if(!blue)
		bv=0.85f;
		
	if(!alpha)
		av=0.85f;
		
		vec4 pix=texture(TEXTURE,UV);
		
	if(!green&&!red&&!blue)
	{
		COLOR=vec4(0f,0f,0f,0f);
	}
	else
		COLOR=vec4(max(pix.r-rv,0.15f),max(pix.g-gv,0.15f),max(pix.b-bv,0.15f),pix.a);
	
	
}"

[sub_resource type="ShaderMaterial" id=8]
resource_local_to_scene = true
shader = SubResource( 7 )
shader_param/red = false
shader_param/green = true
shader_param/blue = false
shader_param/alpha = false

[sub_resource type="Shader" id=9]
resource_local_to_scene = true
code = "shader_type canvas_item;

uniform bool red;
uniform bool green;
uniform bool blue;

uniform bool alpha;

void fragment()
{
	float rv=0f;
	float gv=0f;
	float bv=0f;
	
	float av=0f;
	
	if(!red)
		rv=0.85f;
	if(!green)
		gv=0.85f;
	if(!blue)
		bv=0.85f;
		
	if(!alpha)
		av=0.85f;
		
		vec4 pix=texture(TEXTURE,UV);
		
	if(!green&&!red&&!blue)
	{
		COLOR=vec4(0f,0f,0f,0f);
	}
	else
		COLOR=vec4(max(pix.r-rv,0.15f),max(pix.g-gv,0.15f),max(pix.b-bv,0.15f),pix.a);
	
	
}"

[sub_resource type="ShaderMaterial" id=10]
resource_local_to_scene = true
shader = SubResource( 9 )
shader_param/red = false
shader_param/green = true
shader_param/blue = false
shader_param/alpha = false

[sub_resource type="Shader" id=11]
resource_local_to_scene = true
code = "shader_type canvas_item;

uniform bool red;
uniform bool green;
uniform bool blue;

uniform bool alpha;

void fragment()
{
	float rv=0f;
	float gv=0f;
	float bv=0f;
	
	float av=0f;
	
	if(!red)
		rv=0.85f;
	if(!green)
		gv=0.85f;
	if(!blue)
		bv=0.85f;
		
	if(!alpha)
		av=0.85f;
		
		vec4 pix=texture(TEXTURE,UV);
		
	if(!green&&!red&&!blue)
	{
		COLOR=vec4(0f,0f,0f,0f);
	}
	else
		COLOR=vec4(max(pix.r-rv,0.15f),max(pix.g-gv,0.15f),max(pix.b-bv,0.15f),pix.a);
	
	
}"

[sub_resource type="ShaderMaterial" id=12]
resource_local_to_scene = true
shader = SubResource( 11 )
shader_param/red = false
shader_param/green = false
shader_param/blue = true
shader_param/alpha = false

[sub_resource type="Shader" id=13]
resource_local_to_scene = true
code = "shader_type canvas_item;

uniform bool red;
uniform bool green;
uniform bool blue;

uniform bool alpha;

void fragment()
{
	float rv=0f;
	float gv=0f;
	float bv=0f;
	
	float av=0f;
	
	if(!red)
		rv=0.85f;
	if(!green)
		gv=0.85f;
	if(!blue)
		bv=0.85f;
		
	if(!alpha)
		av=0.85f;
		
		vec4 pix=texture(TEXTURE,UV);
		
	if(!green&&!red&&!blue)
	{
		COLOR=vec4(0f,0f,0f,0f);
	}
	else
		COLOR=vec4(max(pix.r-rv,0.15f),max(pix.g-gv,0.15f),max(pix.b-bv,0.15f),pix.a);
	
	
}"

[sub_resource type="ShaderMaterial" id=14]
resource_local_to_scene = true
shader = SubResource( 13 )
shader_param/red = false
shader_param/green = false
shader_param/blue = true
shader_param/alpha = false

[sub_resource type="RectangleShape2D" id=1]
resource_local_to_scene = true
extents = Vector2( 24, 6.5 )

[node name="Base" instance=ExtResource( 1 )]
DefaultRedEnabled = true

[node name="RichTextLabel" parent="CanvasLayer" index="0"]
margin_top = -21.0
margin_right = 126.0
text = "I'M WALKING ON COLORSHINE"

[node name="Bounds" parent="." index="1"]
tile_data = PoolIntArray( 131100, 5, 65536, 131101, 5, 65537, 131102, 5, 65537, 131103, 5, 65538, 196636, 5, 131072, 196637, 5, 131073, 196638, 5, 131073, 196639, 5, 131074, 262172, 5, 131072, 262173, 5, 131073, 262174, 5, 131073, 262175, 5, 131074, 327708, 5, 131072, 327709, 5, 131073, 327710, 5, 131073, 327711, 5, 131074, 393244, 5, 131072, 393245, 5, 131073, 393246, 5, 131073, 393247, 5, 131074, 458780, 5, 131072, 458781, 5, 131073, 458782, 5, 131073, 458783, 5, 131074, 458795, 5, 65536, 458796, 5, 65537, 458797, 5, 131073, 458798, 5, 131073, 458799, 5, 131073, 458800, 5, 65537, 458801, 5, 65538, 524297, 5, 65536, 524298, 5, 65537, 524299, 5, 65537, 524300, 5, 65537, 524301, 5, 65537, 524302, 5, 65537, 524303, 5, 65537, 524304, 5, 65537, 524305, 5, 65537, 524306, 5, 65537, 524307, 5, 65537, 524308, 5, 65537, 524309, 5, 65537, 524310, 5, 65537, 524311, 5, 65537, 524312, 5, 65537, 524313, 5, 65538, 524316, 5, 131072, 524317, 5, 131073, 524318, 5, 131073, 524319, 5, 131074, 524331, 5, 131072, 524332, 5, 131073, 524333, 5, 131073, 524334, 5, 131073, 524335, 5, 131073, 524336, 5, 131073, 524337, 5, 131074, 589833, 5, 131072, 589834, 5, 131073, 589835, 5, 131073, 589836, 5, 131073, 589837, 5, 131073, 589838, 5, 131073, 589839, 5, 131073, 589840, 5, 131073, 589841, 5, 131073, 589842, 5, 131073, 589843, 5, 131073, 589844, 5, 131073, 589845, 5, 131073, 589846, 5, 131073, 589847, 5, 131073, 589848, 5, 131073, 589849, 5, 131074, 589852, 5, 131072, 589853, 5, 131073, 589854, 5, 131073, 589855, 5, 131074, 589859, 5, 65536, 589860, 5, 65537, 589861, 5, 65537, 589862, 5, 65538, 589867, 5, 131072, 589868, 5, 131073, 589869, 5, 131073, 589870, 5, 131073, 589871, 5, 131073, 589872, 5, 131073, 589873, 5, 131074, 655369, 5, 131072, 655370, 5, 131073, 655371, 5, 131073, 655372, 5, 131073, 655373, 5, 131073, 655374, 5, 131073, 655375, 5, 131073, 655376, 5, 131073, 655377, 5, 131073, 655378, 5, 131073, 655379, 5, 131073, 655380, 5, 131073, 655381, 5, 131073, 655382, 5, 131073, 655383, 5, 131073, 655384, 5, 131073, 655385, 5, 131074, 655386, 4, 0, 655387, 4, 0, 655388, 5, 131072, 655389, 5, 131073, 655390, 5, 131073, 655391, 5, 131074, 655392, 4, 0, 655393, 4, 0, 655394, 4, 0, 655395, 5, 131072, 655396, 5, 131073, 655397, 5, 131073, 655398, 5, 131074, 655399, 4, 0, 655400, 4, 0, 655401, 4, 0, 655402, 4, 0, 655403, 5, 131072, 655404, 5, 131073, 655405, 5, 131073, 655406, 5, 131073, 655407, 5, 131073, 655408, 5, 131073, 655409, 5, 131074, 720905, 5, 131072, 720906, 5, 131073, 720907, 5, 131073, 720908, 5, 131073, 720909, 5, 131073, 720910, 5, 131073, 720911, 5, 131073, 720912, 5, 131073, 720913, 5, 131073, 720914, 5, 131073, 720915, 5, 131073, 720916, 5, 131073, 720917, 5, 131073, 720918, 5, 131073, 720919, 5, 131073, 720920, 5, 131073, 720921, 5, 131073, 720924, 5, 131073, 720925, 5, 131073, 720926, 5, 131073, 720927, 5, 131073, 720931, 5, 131073, 720932, 5, 131073, 720933, 5, 131073, 720934, 5, 131073, 720939, 5, 131073, 720940, 5, 131073, 720941, 5, 131073, 720942, 5, 131073, 720943, 5, 131073, 720944, 5, 131073, 720945, 5, 131074, 786441, 5, 131072, 786442, 5, 131073, 786443, 5, 131073, 786444, 5, 131073, 786445, 5, 131073, 786446, 5, 131073, 786447, 5, 131073, 786448, 5, 131073, 786449, 5, 131073, 786450, 5, 131073, 786451, 5, 131073, 786452, 5, 131073, 786453, 5, 131073, 786454, 5, 131073, 786455, 5, 131073, 786456, 5, 131073, 786457, 5, 131074, 786458, 4, 0, 786459, 4, 0, 786460, 5, 131072, 786461, 5, 131073, 786462, 5, 131073, 786463, 5, 131074, 786464, 4, 0, 786465, 4, 0, 786466, 4, 0, 786467, 5, 131072, 786468, 5, 131073, 786469, 5, 131073, 786470, 5, 131074, 786471, 4, 0, 786472, 4, 0, 786473, 4, 0, 786474, 4, 0, 786475, 5, 131072, 786476, 5, 131073, 786477, 5, 131073, 786478, 5, 131073, 786479, 5, 131073, 786480, 5, 131073, 786481, 5, 131074, 851977, 5, 131072, 851978, 5, 131073, 851979, 5, 131073, 851980, 5, 131073, 851981, 5, 131073, 851982, 5, 131073, 851983, 5, 131073, 851984, 5, 131073, 851985, 5, 131073, 851986, 5, 131073, 851987, 5, 131073, 851988, 5, 131073, 851989, 5, 131073, 851990, 5, 131073, 851991, 5, 131073, 851992, 5, 131073, 851993, 5, 131074, 851996, 5, 196608, 851997, 5, 196609, 851998, 5, 196609, 851999, 5, 196610, 852003, 5, 131072, 852004, 5, 131073, 852005, 5, 131073, 852006, 5, 131074, 852011, 5, 131072, 852012, 5, 131073, 852013, 5, 131073, 852014, 5, 131073, 852015, 5, 131073, 852016, 5, 131073, 852017, 5, 131074, 917513, 5, 131072, 917514, 5, 131073, 917515, 5, 131073, 917516, 5, 131073, 917517, 5, 131073, 917518, 5, 131073, 917519, 5, 131073, 917520, 5, 131073, 917521, 5, 131073, 917522, 5, 131073, 917523, 5, 131073, 917524, 5, 131073, 917525, 5, 131073, 917526, 5, 131073, 917527, 5, 131073, 917528, 5, 131073, 917529, 5, 131074, 917539, 5, 131072, 917540, 5, 131073, 917541, 5, 131073, 917542, 5, 131074, 917547, 5, 131072, 917548, 5, 131073, 917549, 5, 131073, 917550, 5, 131073, 917551, 5, 131073, 917552, 5, 131073, 917553, 5, 131074, 983049, 5, 131072, 983050, 5, 131073, 983051, 5, 131073, 983052, 5, 131073, 983053, 5, 131073, 983054, 5, 131073, 983055, 5, 131073, 983056, 5, 131073, 983057, 5, 131073, 983058, 5, 131073, 983059, 5, 131073, 983060, 5, 131073, 983061, 5, 131073, 983062, 5, 131073, 983063, 5, 131073, 983064, 5, 131073, 983065, 5, 131074, 983075, 5, 131072, 983076, 5, 131073, 983077, 5, 131073, 983078, 5, 131074, 983083, 5, 131072, 983084, 5, 131073, 983085, 5, 131073, 983086, 5, 131073, 983087, 5, 131073, 983088, 5, 131073, 983089, 5, 131074, 1048585, 5, 131072, 1048586, 5, 131073, 1048587, 5, 131073, 1048588, 5, 131073, 1048589, 5, 131073, 1048590, 5, 131073, 1048591, 5, 131073, 1048592, 5, 131073, 1048593, 5, 131073, 1048594, 5, 131073, 1048595, 5, 131073, 1048596, 5, 131073, 1048597, 5, 131073, 1048598, 5, 131073, 1048599, 5, 131073, 1048600, 5, 131073, 1048601, 5, 131074, 1048611, 5, 131072, 1048612, 5, 131073, 1048613, 5, 131073, 1048614, 5, 131074, 1048619, 5, 131072, 1048620, 5, 131073, 1048621, 5, 131073, 1048622, 5, 131073, 1048623, 5, 131073, 1048624, 5, 131073, 1048625, 5, 131074, 1114121, 5, 196608, 1114122, 5, 196609, 1114123, 5, 196609, 1114124, 5, 196609, 1114125, 5, 196609, 1114126, 5, 196609, 1114127, 5, 196609, 1114128, 5, 196609, 1114129, 5, 196609, 1114130, 5, 196609, 1114131, 5, 196609, 1114132, 5, 196609, 1114133, 5, 196609, 1114134, 5, 196609, 1114135, 5, 196609, 1114136, 5, 196609, 1114137, 5, 196610, 1114147, 5, 131072, 1114148, 5, 131073, 1114149, 5, 131073, 1114150, 5, 131074, 1114155, 5, 131072, 1114156, 5, 131073, 1114157, 5, 131073, 1114158, 5, 131073, 1114159, 5, 131073, 1114160, 5, 131073, 1114161, 5, 131074, 1179683, 5, 131072, 1179684, 5, 131073, 1179685, 5, 131073, 1179686, 5, 131074, 1179691, 5, 196608, 1179692, 5, 196609, 1179693, 5, 196609, 1179694, 5, 196609, 1179695, 5, 196609, 1179696, 5, 196609, 1179697, 5, 196610, 1245219, 5, 131072, 1245220, 5, 131073, 1245221, 5, 131073, 1245222, 5, 131074, 1310755, 5, 196608, 1310756, 5, 196609, 1310757, 5, 196609, 1310758, 5, 196610 )

[node name="Character" parent="." index="2"]
position = Vector2( 194, 220 )

[node name="Sprite" parent="Character" index="0"]
material = SubResource( 2 )

[node name="Camera2D" parent="." index="3"]
position = Vector2( 194, 220 )

[node name="RedWalls" parent="." index="4"]
material = SubResource( 4 )

[node name="RedPaths" parent="." index="5"]
material = SubResource( 6 )
tile_data = PoolIntArray( 720921, 3, 0, 720922, 3, 0, 720923, 3, 0, 720924, 3, 0 )

[node name="GreenWalls" parent="." index="6"]
material = SubResource( 8 )

[node name="GreenPaths" parent="." index="7"]
material = SubResource( 10 )
tile_data = PoolIntArray( 720927, 3, 0, 720928, 3, 0, 720929, 3, 0, 720930, 3, 0, 720931, 3, 0 )

[node name="BlueWalls" parent="." index="8"]
material = SubResource( 12 )

[node name="BluePaths" parent="." index="9"]
material = SubResource( 14 )
tile_data = PoolIntArray( 720934, 3, 0, 720935, 3, 0, 720936, 3, 0, 720937, 3, 0, 720938, 3, 0, 720939, 3, 0 )

[node name="Eye" parent="." index="10" groups=["Red"] instance=ExtResource( 2 )]
position = Vector2( 284, 81 )

[node name="Eye2" parent="." index="11" groups=["Green"] instance=ExtResource( 2 )]
position = Vector2( 479, 64 )
Color = 4

[node name="Eye3" parent="." index="12" groups=["Blue"] instance=ExtResource( 2 )]
position = Vector2( 592, 303 )
Color = 5

[node name="SceneChangeTrigger" parent="." index="13" instance=ExtResource( 3 )]
position = Vector2( 745, 96 )
ScenePath = "res://Fabs/Bridge.tscn"

[node name="CollisionShape2D" parent="SceneChangeTrigger" index="0"]
position = Vector2( -1, 9.5 )
shape = SubResource( 1 )

[node name="Eye4" parent="." index="14" instance=ExtResource( 2 )]
position = Vector2( 479, 98 )

[editable path="Character"]
[editable path="SceneChangeTrigger"]
