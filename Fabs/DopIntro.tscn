[gd_scene load_steps=20 format=2]

[ext_resource path="res://Fabs/Base.tscn" type="PackedScene" id=1]
[ext_resource path="res://ShroomShader.tres" type="Shader" id=2]
[ext_resource path="res://Fabs/Doppel.tscn" type="PackedScene" id=3]
[ext_resource path="res://Fabs/Eye.tscn" type="PackedScene" id=4]
[ext_resource path="res://SceneChangeTrigger.tscn" type="PackedScene" id=5]

[sub_resource type="ShaderMaterial" id=15]
resource_local_to_scene = true
shader = ExtResource( 2 )
shader_param/red = false
shader_param/green = false
shader_param/blue = false

[sub_resource type="Shader" id=2]
resource_local_to_scene = true
code = "shader_type canvas_item;

uniform bool red;
uniform bool green;
uniform bool blue;

uniform bool alpha;

void fragment()
{
	float rv=0f;
	float gv=0f;
	float bv=0f;
	
	float av=0f;
	
	if(!red)
		rv=0.85f;
	if(!green)
		gv=0.85f;
	if(!blue)
		bv=0.85f;
		
	if(!alpha)
		av=0.85f;
		
		vec4 pix=texture(TEXTURE,UV);
		
	if(!green&&!red&&!blue)
	{
		COLOR=vec4(0f,0f,0f,0f);
	}
	else
		COLOR=vec4(max(pix.r-rv,0.15f),max(pix.g-gv,0.15f),max(pix.b-bv,0.15f),pix.a);
	
	
}"

[sub_resource type="ShaderMaterial" id=3]
resource_local_to_scene = true
shader = SubResource( 2 )
shader_param/red = true
shader_param/green = false
shader_param/blue = false
shader_param/alpha = false

[sub_resource type="Shader" id=4]
resource_local_to_scene = true
code = "shader_type canvas_item;

uniform bool red;
uniform bool green;
uniform bool blue;

uniform bool alpha;

void fragment()
{
	float rv=0f;
	float gv=0f;
	float bv=0f;
	
	float av=0f;
	
	if(!red)
		rv=0.85f;
	if(!green)
		gv=0.85f;
	if(!blue)
		bv=0.85f;
		
	if(!alpha)
		av=0.85f;
		
		vec4 pix=texture(TEXTURE,UV);
		
	if(!green&&!red&&!blue)
	{
		COLOR=vec4(0f,0f,0f,0f);
	}
	else
		COLOR=vec4(max(pix.r-rv,0.15f),max(pix.g-gv,0.15f),max(pix.b-bv,0.15f),pix.a);
	
	
}"

[sub_resource type="ShaderMaterial" id=5]
resource_local_to_scene = true
shader = SubResource( 4 )
shader_param/red = true
shader_param/green = false
shader_param/blue = false
shader_param/alpha = false

[sub_resource type="Shader" id=6]
resource_local_to_scene = true
code = "shader_type canvas_item;

uniform bool red;
uniform bool green;
uniform bool blue;

uniform bool alpha;

void fragment()
{
	float rv=0f;
	float gv=0f;
	float bv=0f;
	
	float av=0f;
	
	if(!red)
		rv=0.85f;
	if(!green)
		gv=0.85f;
	if(!blue)
		bv=0.85f;
		
	if(!alpha)
		av=0.85f;
		
		vec4 pix=texture(TEXTURE,UV);
		
	if(!green&&!red&&!blue)
	{
		COLOR=vec4(0f,0f,0f,0f);
	}
	else
		COLOR=vec4(max(pix.r-rv,0.15f),max(pix.g-gv,0.15f),max(pix.b-bv,0.15f),pix.a);
	
	
}"

[sub_resource type="ShaderMaterial" id=7]
resource_local_to_scene = true
shader = SubResource( 6 )
shader_param/red = false
shader_param/green = true
shader_param/blue = false
shader_param/alpha = false

[sub_resource type="Shader" id=8]
resource_local_to_scene = true
code = "shader_type canvas_item;

uniform bool red;
uniform bool green;
uniform bool blue;

uniform bool alpha;

void fragment()
{
	float rv=0f;
	float gv=0f;
	float bv=0f;
	
	float av=0f;
	
	if(!red)
		rv=0.85f;
	if(!green)
		gv=0.85f;
	if(!blue)
		bv=0.85f;
		
	if(!alpha)
		av=0.85f;
		
		vec4 pix=texture(TEXTURE,UV);
		
	if(!green&&!red&&!blue)
	{
		COLOR=vec4(0f,0f,0f,0f);
	}
	else
		COLOR=vec4(max(pix.r-rv,0.15f),max(pix.g-gv,0.15f),max(pix.b-bv,0.15f),pix.a);
	
	
}"

[sub_resource type="ShaderMaterial" id=9]
resource_local_to_scene = true
shader = SubResource( 8 )
shader_param/red = false
shader_param/green = true
shader_param/blue = false
shader_param/alpha = false

[sub_resource type="Shader" id=10]
resource_local_to_scene = true
code = "shader_type canvas_item;

uniform bool red;
uniform bool green;
uniform bool blue;

uniform bool alpha;

void fragment()
{
	float rv=0f;
	float gv=0f;
	float bv=0f;
	
	float av=0f;
	
	if(!red)
		rv=0.85f;
	if(!green)
		gv=0.85f;
	if(!blue)
		bv=0.85f;
		
	if(!alpha)
		av=0.85f;
		
		vec4 pix=texture(TEXTURE,UV);
		
	if(!green&&!red&&!blue)
	{
		COLOR=vec4(0f,0f,0f,0f);
	}
	else
		COLOR=vec4(max(pix.r-rv,0.15f),max(pix.g-gv,0.15f),max(pix.b-bv,0.15f),pix.a);
	
	
}"

[sub_resource type="ShaderMaterial" id=11]
resource_local_to_scene = true
shader = SubResource( 10 )
shader_param/red = false
shader_param/green = false
shader_param/blue = true
shader_param/alpha = false

[sub_resource type="Shader" id=12]
resource_local_to_scene = true
code = "shader_type canvas_item;

uniform bool red;
uniform bool green;
uniform bool blue;

uniform bool alpha;

void fragment()
{
	float rv=0f;
	float gv=0f;
	float bv=0f;
	
	float av=0f;
	
	if(!red)
		rv=0.85f;
	if(!green)
		gv=0.85f;
	if(!blue)
		bv=0.85f;
		
	if(!alpha)
		av=0.85f;
		
		vec4 pix=texture(TEXTURE,UV);
		
	if(!green&&!red&&!blue)
	{
		COLOR=vec4(0f,0f,0f,0f);
	}
	else
		COLOR=vec4(max(pix.r-rv,0.15f),max(pix.g-gv,0.15f),max(pix.b-bv,0.15f),pix.a);
	
	
}"

[sub_resource type="ShaderMaterial" id=13]
resource_local_to_scene = true
shader = SubResource( 12 )
shader_param/red = false
shader_param/green = false
shader_param/blue = true
shader_param/alpha = false

[sub_resource type="RectangleShape2D" id=14]
resource_local_to_scene = true
extents = Vector2( 8, 24 )

[node name="Base" instance=ExtResource( 1 )]
DefaultRedEnabled = true
DefaultGreenEnabled = true
DefaultBlueEnabled = true

[node name="RichTextLabel" parent="CanvasLayer" index="0"]
text = "IS THIS ME?"

[node name="Bounds" parent="." index="1"]
tile_data = PoolIntArray( 131075, 5, 65536, 131076, 5, 65537, 131077, 5, 65537, 131078, 5, 65537, 131079, 5, 65537, 131080, 5, 65537, 131081, 5, 65537, 131082, 5, 65537, 131083, 5, 65537, 131084, 5, 65537, 131085, 5, 65537, 131086, 5, 65537, 131087, 5, 65537, 131088, 5, 65537, 131089, 5, 65537, 131090, 5, 65537, 131091, 5, 65537, 131092, 5, 65537, 131093, 5, 65537, 131094, 5, 65537, 131095, 5, 65537, 131096, 5, 65537, 131097, 5, 65537, 131098, 5, 65537, 131099, 5, 65537, 131100, 5, 65537, 131101, 5, 65537, 131102, 5, 65537, 131103, 5, 65537, 131104, 5, 65537, 131105, 5, 65537, 131106, 5, 65537, 131107, 5, 65537, 131108, 5, 65538, 196611, 5, 131072, 196612, 5, 131073, 196613, 5, 131073, 196614, 5, 131073, 196615, 5, 131073, 196616, 5, 131073, 196617, 5, 131073, 196618, 5, 131073, 196619, 5, 131073, 196620, 5, 131073, 196621, 5, 131073, 196622, 5, 131073, 196623, 5, 131073, 196624, 5, 131073, 196625, 5, 131073, 196626, 5, 131073, 196627, 5, 131073, 196628, 5, 131073, 196629, 5, 131073, 196630, 5, 131073, 196631, 5, 131073, 196632, 5, 131073, 196633, 5, 131073, 196634, 5, 131073, 196635, 5, 131073, 196636, 5, 131073, 196637, 5, 131073, 196638, 5, 131073, 196639, 5, 131073, 196640, 5, 131073, 196641, 5, 131073, 196642, 5, 131073, 196643, 5, 131073, 196644, 5, 131074, 262147, 5, 131072, 262148, 5, 131073, 262149, 5, 131073, 262150, 5, 131073, 262151, 5, 131073, 262152, 5, 131073, 262153, 5, 131073, 262154, 5, 131073, 262155, 5, 131073, 262156, 5, 131073, 262157, 5, 131073, 262158, 5, 131073, 262159, 5, 131073, 262160, 5, 131073, 262161, 5, 131073, 262162, 5, 131073, 262163, 5, 131073, 262164, 5, 131073, 262165, 5, 131073, 262166, 5, 131073, 262167, 5, 131073, 262168, 5, 131073, 262169, 5, 131073, 262170, 5, 131073, 262171, 5, 131073, 262172, 5, 131073, 262173, 5, 131073, 262174, 5, 131073, 262175, 5, 131073, 262176, 5, 131073, 262177, 5, 131073, 262178, 5, 131073, 262179, 5, 131073, 262180, 5, 131074, 327683, 5, 131072, 327684, 5, 131073, 327685, 5, 131073, 327686, 5, 131073, 327687, 5, 131073, 327688, 5, 131073, 327689, 5, 131073, 327690, 5, 131073, 327691, 5, 131073, 327692, 5, 131073, 327693, 5, 131073, 327694, 5, 131073, 327695, 5, 131073, 327696, 5, 131073, 327697, 5, 131073, 327698, 5, 131073, 327699, 5, 131073, 327700, 5, 131073, 327701, 5, 131073, 327702, 5, 131073, 327703, 5, 131073, 327704, 5, 131073, 327705, 5, 131073, 327706, 5, 131073, 327707, 5, 131073, 327708, 5, 131073, 327709, 5, 131073, 327710, 5, 131073, 327711, 5, 131073, 327712, 5, 131073, 327713, 5, 131073, 327714, 5, 131073, 327715, 5, 131073, 327716, 5, 131074, 393219, 5, 131072, 393220, 5, 131073, 393221, 5, 131073, 393222, 5, 131073, 393223, 5, 131073, 393224, 5, 131073, 393225, 5, 131073, 393226, 5, 131073, 393227, 5, 131073, 393228, 5, 131073, 393229, 5, 131073, 393230, 5, 131073, 393231, 5, 131073, 393232, 5, 131073, 393233, 5, 131073, 393234, 5, 131073, 393235, 5, 131073, 393236, 5, 131073, 393237, 5, 131073, 393238, 5, 131073, 393239, 5, 131073, 393240, 5, 131073, 393241, 5, 131073, 393242, 5, 131073, 393243, 5, 131073, 393244, 5, 131073, 393245, 5, 131073, 393246, 5, 131073, 393247, 5, 131073, 393248, 5, 131073, 393249, 5, 131073, 393250, 5, 131073, 393251, 5, 131073, 393252, 5, 131074, 458755, 5, 131072, 458756, 5, 131073, 458757, 5, 131073, 458758, 5, 131073, 458759, 5, 131073, 458760, 5, 131073, 458761, 5, 131073, 458762, 5, 131073, 458763, 5, 131073, 458764, 5, 131073, 458765, 5, 131073, 458766, 5, 131073, 458767, 5, 131073, 458768, 5, 131073, 458769, 5, 131073, 458770, 5, 131073, 458771, 5, 131073, 458772, 5, 131073, 458773, 5, 131073, 458774, 5, 131073, 458775, 5, 131073, 458776, 5, 131073, 458777, 5, 131073, 458778, 5, 131073, 458779, 5, 131073, 458780, 5, 131073, 458781, 5, 131073, 458782, 5, 131073, 458783, 5, 131073, 458784, 5, 131073, 458785, 5, 131073, 458786, 5, 131073, 458787, 5, 131073, 458788, 5, 131074, 524291, 5, 131072, 524292, 5, 131073, 524293, 5, 131073, 524294, 5, 131073, 524295, 5, 131073, 524296, 5, 131073, 524297, 5, 131073, 524298, 5, 131073, 524299, 5, 131073, 524300, 5, 131073, 524301, 5, 131073, 524302, 5, 131073, 524303, 5, 131073, 524304, 5, 131073, 524305, 5, 131073, 524306, 5, 131073, 524307, 5, 131073, 524308, 5, 131073, 524309, 5, 131073, 524310, 5, 131073, 524311, 5, 131073, 524312, 5, 131073, 524313, 5, 131073, 524314, 5, 131073, 524315, 5, 131073, 524316, 5, 131073, 524317, 5, 131073, 524318, 5, 131073, 524319, 5, 131073, 524320, 5, 131073, 524321, 5, 131073, 524322, 5, 131073, 524323, 5, 131073, 524324, 5, 131073, 589827, 5, 131072, 589828, 5, 131073, 589829, 5, 131073, 589830, 5, 131073, 589831, 5, 131073, 589832, 5, 131073, 589833, 5, 131073, 589834, 5, 131073, 589835, 5, 131073, 589836, 5, 131073, 589837, 5, 131073, 589838, 5, 131073, 589839, 5, 131073, 589840, 5, 131073, 589841, 5, 131073, 589842, 5, 131073, 589843, 5, 131073, 589844, 5, 131073, 589845, 5, 131073, 589846, 5, 131073, 589847, 5, 131073, 589848, 5, 131073, 589849, 5, 131073, 589850, 5, 131073, 589851, 5, 131073, 589852, 5, 131073, 589853, 5, 131073, 589854, 5, 131073, 589855, 5, 131073, 589856, 5, 131073, 589857, 5, 131073, 589858, 5, 131073, 589859, 5, 131073, 589860, 5, 131073, 655363, 5, 131072, 655364, 5, 131073, 655365, 5, 131073, 655366, 5, 131073, 655367, 5, 131073, 655368, 5, 131073, 655369, 5, 131073, 655370, 5, 131073, 655371, 5, 131073, 655372, 5, 131073, 655373, 5, 131073, 655374, 5, 131073, 655375, 5, 131073, 655376, 5, 131073, 655377, 5, 131073, 655378, 5, 131073, 655379, 5, 131073, 655380, 5, 131073, 655381, 5, 131073, 655382, 5, 131073, 655383, 5, 131073, 655384, 5, 131073, 655385, 5, 131073, 655386, 5, 131073, 655387, 5, 131073, 655388, 5, 131073, 655389, 5, 131073, 655390, 5, 131073, 655391, 5, 131073, 655392, 5, 131073, 655393, 5, 131073, 655394, 5, 131073, 655395, 5, 131073, 655396, 5, 131073, 720899, 5, 131072, 720900, 5, 131073, 720901, 5, 131073, 720902, 5, 131073, 720903, 5, 131073, 720904, 5, 131073, 720905, 5, 131073, 720906, 5, 131073, 720907, 5, 131073, 720908, 5, 131073, 720909, 5, 131073, 720910, 5, 131073, 720911, 5, 131073, 720912, 5, 131073, 720913, 5, 131073, 720914, 5, 131073, 720915, 5, 131073, 720916, 5, 131073, 720917, 5, 131073, 720918, 5, 131073, 720919, 5, 131073, 720920, 5, 131073, 720921, 5, 131073, 720922, 5, 131073, 720923, 5, 131073, 720924, 5, 131073, 720925, 5, 131073, 720926, 5, 131073, 720927, 5, 131073, 720928, 5, 131073, 720929, 5, 131073, 720930, 5, 131073, 720931, 5, 131073, 720932, 5, 131074, 786435, 5, 131072, 786436, 5, 131073, 786437, 5, 131073, 786438, 5, 131073, 786439, 5, 131073, 786440, 5, 131073, 786441, 5, 131073, 786442, 5, 131073, 786443, 5, 131073, 786444, 5, 131073, 786445, 5, 131073, 786446, 5, 131073, 786447, 5, 131073, 786448, 5, 131073, 786449, 5, 131073, 786450, 5, 131073, 786451, 5, 131073, 786452, 5, 131073, 786453, 5, 131073, 786454, 5, 131073, 786455, 5, 131073, 786456, 5, 131073, 786457, 5, 131073, 786458, 5, 131073, 786459, 5, 131073, 786460, 5, 131073, 786461, 5, 131073, 786462, 5, 131073, 786463, 5, 131073, 786464, 5, 131073, 786465, 5, 131073, 786466, 5, 131073, 786467, 5, 131073, 786468, 5, 131074, 851971, 5, 131072, 851972, 5, 131073, 851973, 5, 131073, 851974, 5, 131073, 851975, 5, 131073, 851976, 5, 131073, 851977, 5, 131073, 851978, 5, 131073, 851979, 5, 131073, 851980, 5, 131073, 851981, 5, 131073, 851982, 5, 131073, 851983, 5, 131073, 851984, 5, 131073, 851985, 5, 131073, 851986, 5, 131073, 851987, 5, 131073, 851988, 5, 131073, 851989, 5, 131073, 851990, 5, 131073, 851991, 5, 131073, 851992, 5, 131073, 851993, 5, 131073, 851994, 5, 131073, 851995, 5, 131073, 851996, 5, 131073, 851997, 5, 131073, 851998, 5, 131073, 851999, 5, 131073, 852000, 5, 131073, 852001, 5, 131073, 852002, 5, 131073, 852003, 5, 131073, 852004, 5, 131074, 917507, 5, 131072, 917508, 5, 131073, 917509, 5, 131073, 917510, 5, 131073, 917511, 5, 131073, 917512, 5, 131073, 917513, 5, 131073, 917514, 5, 131073, 917515, 5, 131073, 917516, 5, 131073, 917517, 5, 131073, 917518, 5, 131073, 917519, 5, 131073, 917520, 5, 131073, 917521, 5, 131073, 917522, 5, 131073, 917523, 5, 131073, 917524, 5, 131073, 917525, 5, 131073, 917526, 5, 131073, 917527, 5, 131073, 917528, 5, 131073, 917529, 5, 131073, 917530, 5, 131073, 917531, 5, 131073, 917532, 5, 131073, 917533, 5, 131073, 917534, 5, 131073, 917535, 5, 131073, 917536, 5, 131073, 917537, 5, 131073, 917538, 5, 131073, 917539, 5, 131073, 917540, 5, 131074, 983043, 5, 131072, 983044, 5, 131073, 983045, 5, 131073, 983046, 5, 131073, 983047, 5, 131073, 983048, 5, 131073, 983049, 5, 131073, 983050, 5, 131073, 983051, 5, 131073, 983052, 5, 131073, 983053, 5, 131073, 983054, 5, 131073, 983055, 5, 131073, 983056, 5, 131073, 983057, 5, 131073, 983058, 5, 131073, 983059, 5, 131073, 983060, 5, 131073, 983061, 5, 131073, 983062, 5, 131073, 983063, 5, 131073, 983064, 5, 131073, 983065, 5, 131073, 983066, 5, 131073, 983067, 5, 131073, 983068, 5, 131073, 983069, 5, 131073, 983070, 5, 131073, 983071, 5, 131073, 983072, 5, 131073, 983073, 5, 131073, 983074, 5, 131073, 983075, 5, 131073, 983076, 5, 131074, 1048579, 5, 196608, 1048580, 5, 196609, 1048581, 5, 196609, 1048582, 5, 196609, 1048583, 5, 196609, 1048584, 5, 196609, 1048585, 5, 196609, 1048586, 5, 196609, 1048587, 5, 196609, 1048588, 5, 196609, 1048589, 5, 196609, 1048590, 5, 196609, 1048591, 5, 196609, 1048592, 5, 196609, 1048593, 5, 196609, 1048594, 5, 196609, 1048595, 5, 196609, 1048596, 5, 196609, 1048597, 5, 196609, 1048598, 5, 196609, 1048599, 5, 196609, 1048600, 5, 196609, 1048601, 5, 196609, 1048602, 5, 196609, 1048603, 5, 196609, 1048604, 5, 196609, 1048605, 5, 196609, 1048606, 5, 196609, 1048607, 5, 196609, 1048608, 5, 196609, 1048609, 5, 196609, 1048610, 5, 196609, 1048611, 5, 196609, 1048612, 5, 196610 )

[node name="Character" parent="." index="2"]
position = Vector2( 277, 53 )

[node name="AnimatedSprite" parent="Character" index="2"]
material = SubResource( 15 )

[node name="Camera2D" parent="." index="3"]
position = Vector2( 277, 53 )

[node name="RedWalls" parent="." index="4"]
material = SubResource( 3 )
tile_data = PoolIntArray( 196639, 2, 0, 196640, 2, 1, 196641, 2, 1, 196642, 2, 1, 196643, 2, 2, 262175, 2, 65536, 262176, 2, 65537, 262177, 2, 65537, 262178, 2, 65537, 262179, 2, 65538, 327711, 2, 65536, 327712, 2, 65537, 327713, 2, 65537, 327714, 2, 65537, 327715, 2, 65538, 393247, 2, 65536, 393248, 2, 65537, 393249, 2, 65537, 393250, 2, 65537, 393251, 2, 65538, 458783, 2, 131072, 458784, 2, 131073, 458785, 2, 131073, 458786, 2, 131073, 458787, 2, 131074 )

[node name="RedPaths" parent="." index="5"]
material = SubResource( 5 )

[node name="GreenWalls" parent="." index="6"]
material = SubResource( 7 )
tile_data = PoolIntArray( 720900, 2, 0, 720901, 2, 1, 720902, 2, 1, 720903, 2, 1, 720904, 2, 2, 786436, 2, 65536, 786437, 2, 65537, 786438, 2, 65537, 786439, 2, 65537, 786440, 2, 65538, 851972, 2, 65536, 851973, 2, 65537, 851974, 2, 65537, 851975, 2, 65537, 851976, 2, 65538, 917508, 2, 65536, 917509, 2, 65537, 917510, 2, 65537, 917511, 2, 65537, 917512, 2, 65538, 983044, 2, 131072, 983045, 2, 131073, 983046, 2, 131073, 983047, 2, 131073, 983048, 2, 131074 )

[node name="GreenPaths" parent="." index="7"]
material = SubResource( 9 )

[node name="BlueWalls" parent="." index="8"]
material = SubResource( 11 )
tile_data = PoolIntArray( 196627, 2, 0, 196628, 2, 1, 196629, 2, 2, 262163, 2, 65536, 262164, 2, 65537, 262165, 2, 65538, 327699, 2, 65536, 327700, 2, 65537, 327701, 2, 65538, 393235, 2, 65536, 393236, 2, 65537, 393237, 2, 65538, 458771, 2, 65536, 458772, 2, 65537, 458773, 2, 65538, 524307, 2, 65536, 524308, 2, 65537, 524309, 2, 65538, 589843, 2, 65536, 589844, 2, 65537, 589845, 2, 65538, 655379, 2, 65536, 655380, 2, 65537, 655381, 2, 65538, 720915, 2, 65536, 720916, 2, 65537, 720917, 2, 65538, 786451, 2, 65536, 786452, 2, 65537, 786453, 2, 65538, 851987, 2, 65536, 851988, 2, 65537, 851989, 2, 65538, 917523, 2, 65536, 917524, 2, 65537, 917525, 2, 65538, 983059, 2, 131072, 983060, 2, 131073, 983061, 2, 131074 )

[node name="BluePaths" parent="." index="9"]
material = SubResource( 13 )

[node name="Doppel" parent="." index="10" instance=ExtResource( 3 )]
position = Vector2( 373, 53 )

[node name="Eye" parent="." index="11" instance=ExtResource( 4 )]
position = Vector2( 274, 238 )

[node name="SceneChangeTrigger" parent="." index="12" instance=ExtResource( 5 )]
position = Vector2( 600, 152 )
ScenePath = "res://Fabs/Thou.tscn"

[node name="CollisionShape2D" parent="SceneChangeTrigger" index="0"]
shape = SubResource( 14 )

[node name="Eye2" parent="." index="13" instance=ExtResource( 4 )]
position = Vector2( 537, 87 )
Color = 4

[node name="Eye3" parent="." index="14" instance=ExtResource( 4 )]
position = Vector2( 105, 213 )
Color = 5

[editable path="Character"]
[editable path="SceneChangeTrigger"]
