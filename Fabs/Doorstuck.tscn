[gd_scene load_steps=25 format=2]

[ext_resource path="res://Fabs/Base.tscn" type="PackedScene" id=1]
[ext_resource path="res://ShroomShader.tres" type="Shader" id=2]
[ext_resource path="res://Fabs/Doppel.tscn" type="PackedScene" id=3]
[ext_resource path="res://Fabs/Eye.tscn" type="PackedScene" id=4]
[ext_resource path="res://SceneChangeTrigger.tscn" type="PackedScene" id=5]
[ext_resource path="res://Fabs/Shroom.tscn" type="PackedScene" id=6]

[sub_resource type="ShaderMaterial" id=1]
resource_local_to_scene = true
shader = ExtResource( 2 )
shader_param/red = false
shader_param/green = false
shader_param/blue = false

[sub_resource type="Shader" id=2]
resource_local_to_scene = true
code = "shader_type canvas_item;

uniform bool red;
uniform bool green;
uniform bool blue;

uniform bool alpha;

void fragment()
{
	float rv=0f;
	float gv=0f;
	float bv=0f;
	
	float av=0f;
	
	if(!red)
		rv=0.85f;
	if(!green)
		gv=0.85f;
	if(!blue)
		bv=0.85f;
		
	if(!alpha)
		av=0.85f;
		
		vec4 pix=texture(TEXTURE,UV);
		
	if(!green&&!red&&!blue)
	{
		COLOR=vec4(0f,0f,0f,0f);
	}
	else
		COLOR=vec4(max(pix.r-rv,0.15f),max(pix.g-gv,0.15f),max(pix.b-bv,0.15f),pix.a);
	
	
}"

[sub_resource type="ShaderMaterial" id=3]
resource_local_to_scene = true
shader = SubResource( 2 )
shader_param/red = true
shader_param/green = false
shader_param/blue = false
shader_param/alpha = false

[sub_resource type="Shader" id=4]
resource_local_to_scene = true
code = "shader_type canvas_item;

uniform bool red;
uniform bool green;
uniform bool blue;

uniform bool alpha;

void fragment()
{
	float rv=0f;
	float gv=0f;
	float bv=0f;
	
	float av=0f;
	
	if(!red)
		rv=0.85f;
	if(!green)
		gv=0.85f;
	if(!blue)
		bv=0.85f;
		
	if(!alpha)
		av=0.85f;
		
		vec4 pix=texture(TEXTURE,UV);
		
	if(!green&&!red&&!blue)
	{
		COLOR=vec4(0f,0f,0f,0f);
	}
	else
		COLOR=vec4(max(pix.r-rv,0.15f),max(pix.g-gv,0.15f),max(pix.b-bv,0.15f),pix.a);
	
	
}"

[sub_resource type="ShaderMaterial" id=5]
resource_local_to_scene = true
shader = SubResource( 4 )
shader_param/red = true
shader_param/green = false
shader_param/blue = false
shader_param/alpha = false

[sub_resource type="Shader" id=6]
resource_local_to_scene = true
code = "shader_type canvas_item;

uniform bool red;
uniform bool green;
uniform bool blue;

uniform bool alpha;

void fragment()
{
	float rv=0f;
	float gv=0f;
	float bv=0f;
	
	float av=0f;
	
	if(!red)
		rv=0.85f;
	if(!green)
		gv=0.85f;
	if(!blue)
		bv=0.85f;
		
	if(!alpha)
		av=0.85f;
		
		vec4 pix=texture(TEXTURE,UV);
		
	if(!green&&!red&&!blue)
	{
		COLOR=vec4(0f,0f,0f,0f);
	}
	else
		COLOR=vec4(max(pix.r-rv,0.15f),max(pix.g-gv,0.15f),max(pix.b-bv,0.15f),pix.a);
	
	
}"

[sub_resource type="ShaderMaterial" id=7]
resource_local_to_scene = true
shader = SubResource( 6 )
shader_param/red = false
shader_param/green = true
shader_param/blue = false
shader_param/alpha = false

[sub_resource type="Shader" id=8]
resource_local_to_scene = true
code = "shader_type canvas_item;

uniform bool red;
uniform bool green;
uniform bool blue;

uniform bool alpha;

void fragment()
{
	float rv=0f;
	float gv=0f;
	float bv=0f;
	
	float av=0f;
	
	if(!red)
		rv=0.85f;
	if(!green)
		gv=0.85f;
	if(!blue)
		bv=0.85f;
		
	if(!alpha)
		av=0.85f;
		
		vec4 pix=texture(TEXTURE,UV);
		
	if(!green&&!red&&!blue)
	{
		COLOR=vec4(0f,0f,0f,0f);
	}
	else
		COLOR=vec4(max(pix.r-rv,0.15f),max(pix.g-gv,0.15f),max(pix.b-bv,0.15f),pix.a);
	
	
}"

[sub_resource type="ShaderMaterial" id=9]
resource_local_to_scene = true
shader = SubResource( 8 )
shader_param/red = false
shader_param/green = true
shader_param/blue = false
shader_param/alpha = false

[sub_resource type="Shader" id=10]
resource_local_to_scene = true
code = "shader_type canvas_item;

uniform bool red;
uniform bool green;
uniform bool blue;

uniform bool alpha;

void fragment()
{
	float rv=0f;
	float gv=0f;
	float bv=0f;
	
	float av=0f;
	
	if(!red)
		rv=0.85f;
	if(!green)
		gv=0.85f;
	if(!blue)
		bv=0.85f;
		
	if(!alpha)
		av=0.85f;
		
		vec4 pix=texture(TEXTURE,UV);
		
	if(!green&&!red&&!blue)
	{
		COLOR=vec4(0f,0f,0f,0f);
	}
	else
		COLOR=vec4(max(pix.r-rv,0.15f),max(pix.g-gv,0.15f),max(pix.b-bv,0.15f),pix.a);
	
	
}"

[sub_resource type="ShaderMaterial" id=11]
resource_local_to_scene = true
shader = SubResource( 10 )
shader_param/red = false
shader_param/green = false
shader_param/blue = true
shader_param/alpha = false

[sub_resource type="Shader" id=12]
resource_local_to_scene = true
code = "shader_type canvas_item;

uniform bool red;
uniform bool green;
uniform bool blue;

uniform bool alpha;

void fragment()
{
	float rv=0f;
	float gv=0f;
	float bv=0f;
	
	float av=0f;
	
	if(!red)
		rv=0.85f;
	if(!green)
		gv=0.85f;
	if(!blue)
		bv=0.85f;
		
	if(!alpha)
		av=0.85f;
		
		vec4 pix=texture(TEXTURE,UV);
		
	if(!green&&!red&&!blue)
	{
		COLOR=vec4(0f,0f,0f,0f);
	}
	else
		COLOR=vec4(max(pix.r-rv,0.15f),max(pix.g-gv,0.15f),max(pix.b-bv,0.15f),pix.a);
	
	
}"

[sub_resource type="ShaderMaterial" id=13]
resource_local_to_scene = true
shader = SubResource( 12 )
shader_param/red = false
shader_param/green = false
shader_param/blue = true
shader_param/alpha = false

[sub_resource type="RectangleShape2D" id=14]
resource_local_to_scene = true
extents = Vector2( 23.75, 4.5 )

[sub_resource type="Shader" id=15]
resource_local_to_scene = true
code = "shader_type canvas_item;

uniform bool red;
uniform bool green;
uniform bool blue;

uniform bool alpha;

float nrand(vec2 co){
    return fract(sin(dot(co.xy ,vec2(12.9898,78.233))) * 43758.5453);
}

void fragment()
{
	float rv=0f;
	float gv=0f;
	float bv=0f;
	
	float av=0f;
	
	vec4 pix=texture(TEXTURE,UV);
	
	if(!red&&!green&&!blue)
	{
		if(pix.a>0f)
		{
			
		float c=nrand(vec2(TIME+UV.x,TIME+UV.y));
		COLOR=vec4(c,c,c,1f);
		}
		else
		{
			COLOR=vec4(0f,0f,0f,0f);
		}
		
	}
	else{
		
	
	if(!red)
		rv=0.85f;
	if(!green)
		gv=0.85f;
	if(!blue)
		bv=0.85f;
		
	if(!alpha)
		av=0.85f;
		
		
	if(!green&&!red&&!blue)
	{
		COLOR=vec4(0f,0f,0f,0f);
	}
	else
		COLOR=vec4(max(pix.r-rv,0.15f),max(pix.g-gv,0.15f),max(pix.b-bv,0.15f),pix.a);
	
	}
	
} "

[sub_resource type="ShaderMaterial" id=16]
resource_local_to_scene = true
shader = SubResource( 15 )
shader_param/red = true
shader_param/green = true
shader_param/blue = true
shader_param/alpha = false

[sub_resource type="Shader" id=17]
resource_local_to_scene = true
code = "shader_type canvas_item;

uniform bool red;
uniform bool green;
uniform bool blue;

uniform bool alpha;

float nrand(vec2 co){
    return fract(sin(dot(co.xy ,vec2(12.9898,78.233))) * 43758.5453);
}

void fragment()
{
	float rv=0f;
	float gv=0f;
	float bv=0f;
	
	float av=0f;
	
	vec4 pix=texture(TEXTURE,UV);
	
	if(!red&&!green&&!blue)
	{
		if(pix.a>0f)
		{
			
		float c=nrand(vec2(TIME+UV.x,TIME+UV.y));
		COLOR=vec4(c,c,c,1f);
		}
		else
		{
			COLOR=vec4(0f,0f,0f,0f);
		}
		
	}
	else{
		
	
	if(!red)
		rv=0.85f;
	if(!green)
		gv=0.85f;
	if(!blue)
		bv=0.85f;
		
	if(!alpha)
		av=0.85f;
		
		
	if(!green&&!red&&!blue)
	{
		COLOR=vec4(0f,0f,0f,0f);
	}
	else
		COLOR=vec4(max(pix.r-rv,0.15f),max(pix.g-gv,0.15f),max(pix.b-bv,0.15f),pix.a);
	
	}
	
} "

[sub_resource type="ShaderMaterial" id=18]
resource_local_to_scene = true
shader = SubResource( 17 )
shader_param/red = true
shader_param/green = true
shader_param/blue = true
shader_param/alpha = false

[node name="Base" instance=ExtResource( 1 )]
DefaultRedEnabled = true
DefaultGreenEnabled = true
DefaultBlueEnabled = true

[node name="RichTextLabel" parent="CanvasLayer" index="0"]
text = "MIRROR WORLD
"

[node name="Bounds" parent="." index="1"]
tile_data = PoolIntArray( -589819, 5, 65536, -589818, 5, 65537, -589817, 5, 65537, -589816, 5, 65537, -589815, 5, 65537, -589814, 5, 65537, -589813, 5, 65537, -589812, 5, 65537, -589811, 5, 65538, -589804, 5, 65536, -589803, 5, 65537, -589802, 5, 65537, -589801, 5, 65537, -589800, 5, 65537, -589799, 5, 65537, -589798, 5, 65537, -589797, 5, 65537, -589796, 5, 65538, -524283, 5, 131072, -524282, 5, 131073, -524281, 5, 131073, -524280, 5, 131073, -524279, 5, 131073, -524278, 5, 131073, -524277, 5, 131073, -524276, 5, 131073, -524275, 5, 131074, -524268, 5, 131072, -524267, 5, 131073, -524266, 5, 131073, -524265, 5, 131073, -524264, 5, 131073, -524263, 5, 131073, -524262, 5, 131073, -524261, 5, 131073, -524260, 5, 131074, -458747, 5, 131072, -458746, 5, 131073, -458745, 5, 131073, -458744, 5, 131073, -458743, 5, 131073, -458742, 5, 131073, -458741, 5, 131073, -458740, 5, 131073, -458739, 5, 131074, -458732, 5, 131072, -458731, 5, 131073, -458730, 5, 131073, -458729, 5, 131073, -458728, 5, 131073, -458727, 5, 131073, -458726, 5, 131073, -458725, 5, 131073, -458724, 5, 131074, -393211, 5, 131072, -393210, 5, 131073, -393209, 5, 131073, -393208, 5, 131073, -393207, 5, 131073, -393206, 5, 131073, -393205, 5, 131073, -393204, 5, 131073, -393203, 5, 131074, -393196, 5, 131072, -393195, 5, 131073, -393194, 5, 131073, -393193, 5, 131073, -393192, 5, 131073, -393191, 5, 131073, -393190, 5, 131073, -393189, 5, 131073, -393188, 5, 131074, -327675, 5, 131072, -327674, 5, 131073, -327673, 5, 131073, -327672, 5, 131073, -327671, 5, 131073, -327670, 5, 131073, -327669, 5, 131073, -327668, 5, 131073, -327667, 5, 131074, -327660, 5, 131072, -327659, 5, 131073, -327658, 5, 131073, -327657, 5, 131073, -327656, 5, 131073, -327655, 5, 131073, -327654, 5, 131073, -327653, 5, 131073, -327652, 5, 131074, -262139, 5, 131072, -262138, 5, 131073, -262137, 5, 131073, -262136, 5, 131073, -262135, 5, 131073, -262134, 5, 131073, -262133, 5, 131073, -262132, 5, 131073, -262131, 5, 131074, -262124, 5, 131072, -262123, 5, 131073, -262122, 5, 131073, -262121, 5, 131073, -262120, 5, 131073, -262119, 5, 131073, -262118, 5, 131073, -262117, 5, 131073, -262116, 5, 131074, -196603, 5, 131072, -196602, 5, 131073, -196601, 5, 131073, -196600, 5, 131073, -196599, 5, 131073, -196598, 5, 131073, -196597, 5, 131073, -196596, 5, 131073, -196595, 5, 131074, -196588, 5, 131072, -196587, 5, 131073, -196586, 5, 131073, -196585, 5, 131073, -196584, 5, 131073, -196583, 5, 131073, -196582, 5, 131073, -196581, 5, 131073, -196580, 5, 131074, -131067, 5, 131072, -131066, 5, 131073, -131065, 5, 131073, -131064, 5, 131073, -131063, 5, 131073, -131062, 5, 131073, -131061, 5, 131073, -131060, 5, 131073, -131059, 5, 131074, -131052, 5, 131072, -131051, 5, 131073, -131050, 5, 131073, -131049, 5, 131073, -131048, 5, 131073, -131047, 5, 131073, -131046, 5, 131073, -131045, 5, 131073, -131044, 5, 131074, -65531, 5, 131072, -65530, 5, 131073, -65529, 5, 131073, -65528, 5, 131073, -65527, 5, 131073, -65526, 5, 131073, -65525, 5, 131073, -65524, 5, 131073, -65523, 5, 131074, -65516, 5, 131072, -65515, 5, 131073, -65514, 5, 131073, -65513, 5, 131073, -65512, 5, 131073, -65511, 5, 131073, -65510, 5, 131073, -65509, 5, 131073, -65508, 5, 131074, 5, 5, 131072, 6, 5, 131073, 7, 5, 131073, 8, 5, 131073, 9, 5, 131073, 10, 5, 131073, 11, 5, 131073, 12, 5, 131073, 13, 5, 131074, 20, 5, 131072, 21, 5, 131073, 22, 5, 131073, 23, 5, 131073, 24, 5, 131073, 25, 5, 131073, 26, 5, 131073, 27, 5, 131073, 28, 5, 131074, 65541, 5, 131072, 65542, 5, 131073, 65543, 5, 131073, 65544, 5, 131073, 65545, 5, 131073, 65546, 5, 131073, 65547, 5, 131073, 65548, 5, 131073, 65549, 5, 131074, 65556, 5, 131072, 65557, 5, 131073, 65558, 5, 131073, 65559, 5, 131073, 65560, 5, 131073, 65561, 5, 131073, 65562, 5, 131073, 65563, 5, 131073, 65564, 5, 131074, 131075, 5, 65536, 131076, 5, 65537, 131077, 5, 65540, 131078, 5, 131073, 131079, 5, 131073, 131080, 5, 131073, 131081, 5, 131073, 131082, 5, 131073, 131083, 5, 131073, 131084, 5, 131073, 131085, 5, 65539, 131086, 5, 65537, 131087, 5, 65538, 131090, 5, 65536, 131091, 5, 65537, 131092, 5, 65540, 131093, 5, 131073, 131094, 5, 131073, 131095, 5, 131073, 131096, 5, 131073, 131097, 5, 131073, 131098, 5, 131073, 131099, 5, 131073, 131100, 5, 65539, 131101, 5, 65537, 131102, 5, 65538, 196611, 5, 131072, 196612, 5, 131073, 196613, 5, 131073, 196614, 5, 131073, 196615, 5, 131073, 196616, 5, 131073, 196617, 5, 131073, 196618, 5, 131073, 196619, 5, 131073, 196620, 5, 131073, 196621, 5, 131073, 196622, 5, 131073, 196623, 5, 131074, 196626, 5, 131072, 196627, 5, 131073, 196628, 5, 131073, 196629, 5, 131073, 196630, 5, 131073, 196631, 5, 131073, 196632, 5, 131073, 196633, 5, 131073, 196634, 5, 131073, 196635, 5, 131073, 196636, 5, 131073, 196637, 5, 131073, 196638, 5, 131074, 262144, 5, 65536, 262145, 5, 65537, 262146, 5, 65537, 262147, 5, 65540, 262148, 5, 131073, 262149, 5, 131073, 262150, 5, 131073, 262151, 5, 131073, 262152, 5, 131073, 262153, 5, 131073, 262154, 5, 131073, 262155, 5, 131073, 262156, 5, 131073, 262157, 5, 3, 262158, 5, 196609, 262159, 5, 196610, 262162, 5, 196608, 262163, 5, 196609, 262164, 5, 4, 262165, 5, 131073, 262166, 5, 131073, 262167, 5, 131073, 262168, 5, 131073, 262169, 5, 131073, 262170, 5, 131073, 262171, 5, 131073, 262172, 5, 131073, 262173, 5, 131073, 262174, 5, 65539, 262175, 5, 65537, 262176, 5, 65537, 262177, 5, 65538, 327680, 5, 131072, 327681, 5, 131073, 327682, 5, 131073, 327683, 5, 131073, 327684, 5, 131073, 327685, 5, 131073, 327686, 5, 131073, 327687, 5, 131073, 327688, 5, 131073, 327689, 5, 131073, 327690, 5, 131073, 327691, 5, 131073, 327692, 5, 131073, 327693, 5, 131074, 327700, 5, 131072, 327701, 5, 131073, 327702, 5, 131073, 327703, 5, 131073, 327704, 5, 131073, 327705, 5, 131073, 327706, 5, 131073, 327707, 5, 131073, 327708, 5, 131073, 327709, 5, 131073, 327710, 5, 131073, 327711, 5, 131073, 327712, 5, 131073, 327713, 5, 131074, 393216, 5, 131072, 393217, 5, 131073, 393218, 5, 131073, 393219, 5, 131073, 393220, 5, 131073, 393221, 5, 131073, 393222, 5, 131073, 393223, 5, 131073, 393224, 5, 131073, 393225, 5, 131073, 393226, 5, 131073, 393227, 5, 131073, 393228, 5, 131073, 393229, 5, 65539, 393230, 5, 65537, 393231, 5, 65538, 393234, 5, 65536, 393235, 5, 65537, 393236, 5, 65540, 393237, 5, 131073, 393238, 5, 131073, 393239, 5, 131073, 393240, 5, 131073, 393241, 5, 131073, 393242, 5, 131073, 393243, 5, 131073, 393244, 5, 131073, 393245, 5, 131073, 393246, 5, 131073, 393247, 5, 131073, 393248, 5, 131073, 393249, 5, 131074, 458752, 5, 131072, 458753, 5, 131073, 458754, 5, 131073, 458755, 5, 131073, 458756, 5, 131073, 458757, 5, 131073, 458758, 5, 131073, 458759, 5, 131073, 458760, 5, 131073, 458761, 5, 131073, 458762, 5, 131073, 458763, 5, 131073, 458764, 5, 131073, 458765, 5, 131073, 458766, 5, 131073, 458767, 5, 131074, 458770, 5, 131072, 458771, 5, 131073, 458772, 5, 131073, 458773, 5, 131073, 458774, 5, 131073, 458775, 5, 131073, 458776, 5, 131073, 458777, 5, 131073, 458778, 5, 131073, 458779, 5, 131073, 458780, 5, 131073, 458781, 5, 131073, 458782, 5, 131073, 458783, 5, 131073, 458784, 5, 131073, 458785, 5, 131074, 524288, 5, 131072, 524289, 5, 131073, 524290, 5, 131073, 524291, 5, 131073, 524292, 5, 131073, 524293, 5, 131073, 524294, 5, 131073, 524295, 5, 131073, 524296, 5, 131073, 524297, 5, 131073, 524298, 5, 131073, 524299, 5, 131073, 524300, 5, 131073, 524301, 5, 3, 524302, 5, 196609, 524303, 5, 196610, 524306, 5, 196608, 524307, 5, 196609, 524308, 5, 4, 524309, 5, 131073, 524310, 5, 131073, 524311, 5, 131073, 524312, 5, 131073, 524313, 5, 131073, 524314, 5, 131073, 524315, 5, 131073, 524316, 5, 131073, 524317, 5, 131073, 524318, 5, 131073, 524319, 5, 131073, 524320, 5, 131073, 524321, 5, 131074, 589824, 5, 131072, 589825, 5, 131073, 589826, 5, 131073, 589827, 5, 131073, 589828, 5, 131073, 589829, 5, 131073, 589830, 5, 131073, 589831, 5, 131073, 589832, 5, 131073, 589833, 5, 131073, 589834, 5, 131073, 589835, 5, 131073, 589836, 5, 131073, 589837, 5, 131074, 589844, 5, 131072, 589845, 5, 131073, 589846, 5, 131073, 589847, 5, 131073, 589848, 5, 131073, 589849, 5, 131073, 589850, 5, 131073, 589851, 5, 131073, 589852, 5, 131073, 589853, 5, 131073, 589854, 5, 131073, 589855, 5, 131073, 589856, 5, 131073, 589857, 5, 131074, 655360, 5, 196608, 655361, 5, 196609, 655362, 5, 196609, 655363, 5, 4, 655364, 5, 131073, 655365, 5, 131073, 655366, 5, 131073, 655367, 5, 131073, 655368, 5, 131073, 655369, 5, 131073, 655370, 5, 131073, 655371, 5, 131073, 655372, 5, 131073, 655373, 5, 65539, 655374, 5, 65537, 655375, 5, 65538, 655378, 5, 65536, 655379, 5, 65537, 655380, 5, 65540, 655381, 5, 131073, 655382, 5, 131073, 655383, 5, 131073, 655384, 5, 131073, 655385, 5, 131073, 655386, 5, 131073, 655387, 5, 131073, 655388, 5, 131073, 655389, 5, 131073, 655390, 5, 3, 655391, 5, 196609, 655392, 5, 196609, 655393, 5, 196610, 720899, 5, 131072, 720900, 5, 131073, 720901, 5, 131073, 720902, 5, 131073, 720903, 5, 131073, 720904, 5, 131073, 720905, 5, 131073, 720906, 5, 131073, 720907, 5, 131073, 720908, 5, 131073, 720909, 5, 131073, 720910, 5, 131073, 720911, 5, 131074, 720914, 5, 131072, 720915, 5, 131073, 720916, 5, 131073, 720917, 5, 131073, 720918, 5, 131073, 720919, 5, 131073, 720920, 5, 131073, 720921, 5, 131073, 720922, 5, 131073, 720923, 5, 131073, 720924, 5, 131073, 720925, 5, 131073, 720926, 5, 131074, 786435, 5, 131072, 786436, 5, 131073, 786437, 5, 131073, 786438, 5, 131073, 786439, 5, 131073, 786440, 5, 131073, 786441, 5, 131073, 786442, 5, 131073, 786443, 5, 131073, 786444, 5, 131073, 786445, 5, 3, 786446, 5, 196609, 786447, 5, 196610, 786450, 5, 196608, 786451, 5, 196609, 786452, 5, 4, 786453, 5, 131073, 786454, 5, 131073, 786455, 5, 131073, 786456, 5, 131073, 786457, 5, 131073, 786458, 5, 131073, 786459, 5, 131073, 786460, 5, 131073, 786461, 5, 131073, 786462, 5, 131074, 851971, 5, 131072, 851972, 5, 131073, 851973, 5, 131073, 851974, 5, 131073, 851975, 5, 131073, 851976, 5, 131073, 851977, 5, 131073, 851978, 5, 131073, 851979, 5, 131073, 851980, 5, 131073, 851981, 5, 131074, 851988, 5, 131072, 851989, 5, 131073, 851990, 5, 131073, 851991, 5, 131073, 851992, 5, 131073, 851993, 5, 131073, 851994, 5, 131073, 851995, 5, 131073, 851996, 5, 131073, 851997, 5, 131073, 851998, 5, 131074, 917507, 5, 131072, 917508, 5, 131073, 917509, 5, 131073, 917510, 5, 131073, 917511, 5, 131073, 917512, 5, 131073, 917513, 5, 131073, 917514, 5, 131073, 917515, 5, 131073, 917516, 5, 131073, 917517, 5, 65539, 917518, 5, 65537, 917519, 5, 65538, 917522, 5, 65536, 917523, 5, 65537, 917524, 5, 65540, 917525, 5, 131073, 917526, 5, 131073, 917527, 5, 131073, 917528, 5, 131073, 917529, 5, 131073, 917530, 5, 131073, 917531, 5, 131073, 917532, 5, 131073, 917533, 5, 131073, 917534, 5, 131074, 1048575, 5, 65536, 983040, 5, 65537, 983041, 5, 65537, 983042, 5, 65537, 983043, 5, 65540, 983044, 5, 131073, 983045, 5, 131073, 983046, 5, 131073, 983047, 5, 131073, 983048, 5, 131073, 983049, 5, 131073, 983050, 5, 131073, 983051, 5, 131073, 983052, 5, 131073, 983053, 5, 131073, 983054, 5, 131073, 983055, 5, 131074, 983058, 5, 131072, 983059, 5, 131073, 983060, 5, 131073, 983061, 5, 131073, 983062, 5, 131073, 983063, 5, 131073, 983064, 5, 131073, 983065, 5, 131073, 983066, 5, 131073, 983067, 5, 131073, 983068, 5, 131073, 983069, 5, 131073, 983070, 5, 65539, 983071, 5, 65537, 983072, 5, 65537, 983073, 5, 65537, 983074, 5, 65538, 1114110, 5, 65536, 1114111, 5, 65540, 1048576, 5, 131073, 1048577, 5, 131073, 1048578, 5, 131073, 1048579, 5, 131073, 1048580, 5, 131073, 1048581, 5, 131073, 1048582, 5, 131073, 1048583, 5, 131073, 1048584, 5, 131073, 1048585, 5, 131073, 1048586, 5, 131073, 1048587, 5, 131073, 1048588, 5, 131073, 1048589, 5, 131073, 1048590, 5, 131073, 1048591, 5, 131074, 1048594, 5, 131072, 1048595, 5, 131073, 1048596, 5, 131073, 1048597, 5, 131073, 1048598, 5, 131073, 1048599, 5, 131073, 1048600, 5, 131073, 1048601, 5, 131073, 1048602, 5, 131073, 1048603, 5, 131073, 1048604, 5, 131073, 1048605, 5, 131073, 1048606, 5, 131073, 1048607, 5, 131073, 1048608, 5, 131073, 1048609, 5, 131073, 1048610, 5, 65539, 1048611, 5, 65538, 1179646, 5, 131072, 1179647, 5, 131073, 1114112, 5, 131073, 1114113, 5, 131073, 1114114, 5, 3, 1114115, 5, 196609, 1114116, 5, 196609, 1114117, 5, 196609, 1114118, 5, 131073, 1114119, 5, 131073, 1114120, 5, 131073, 1114121, 5, 196609, 1114122, 5, 196609, 1114123, 5, 196609, 1114124, 5, 196609, 1114125, 5, 4, 1114126, 5, 131073, 1114127, 5, 131074, 1114130, 5, 131072, 1114131, 5, 131073, 1114132, 5, 3, 1114133, 5, 196609, 1114134, 5, 196609, 1114135, 5, 196609, 1114136, 5, 196609, 1114137, 5, 196609, 1114138, 5, 196609, 1114139, 5, 196609, 1114140, 5, 196609, 1114141, 5, 196609, 1114142, 5, 196609, 1114143, 5, 4, 1114144, 5, 131073, 1114145, 5, 131073, 1114146, 5, 131073, 1114147, 5, 131074, 1245182, 5, 131072, 1245183, 5, 131073, 1179648, 5, 131073, 1179649, 5, 131073, 1179650, 5, 131074, 1179661, 5, 131072, 1179662, 5, 131073, 1179663, 5, 131074, 1179666, 5, 131072, 1179667, 5, 131073, 1179668, 5, 131074, 1179679, 5, 131072, 1179680, 5, 131073, 1179681, 5, 131073, 1179682, 5, 131073, 1179683, 5, 131074, 1310718, 5, 196608, 1310719, 5, 196609, 1245184, 5, 196609, 1245185, 5, 196609, 1245186, 5, 196610, 1245197, 5, 196608, 1245198, 5, 196609, 1245199, 5, 196610, 1245202, 5, 196608, 1245203, 5, 196609, 1245204, 5, 196610, 1245215, 5, 196608, 1245216, 5, 196609, 1245217, 5, 196609, 1245218, 5, 196609, 1245219, 5, 196610 )

[node name="Character" parent="." index="2"]
position = Vector2( 205, 103 )

[node name="AnimatedSprite" parent="Character" index="2"]
material = SubResource( 1 )

[node name="Camera2D" parent="." index="3"]
position = Vector2( 205, 103 )

[node name="RedWalls" parent="." index="4"]
material = SubResource( 3 )
tile_data = PoolIntArray( -65515, 2, 0, -65514, 2, 1, -65513, 2, 1, -65512, 2, 1, -65511, 2, 1, -65510, 2, 1, -65509, 2, 2, 21, 2, 131072, 22, 2, 131073, 23, 2, 131073, 24, 2, 131073, 25, 2, 131073, 26, 2, 131073, 27, 2, 131074 )

[node name="RedPaths" parent="." index="5"]
material = SubResource( 5 )

[node name="GreenWalls" parent="." index="6"]
material = SubResource( 7 )
tile_data = PoolIntArray( -65530, 2, 0, -65529, 2, 1, -65528, 2, 1, -65527, 2, 1, -65526, 2, 1, -65525, 2, 1, -65524, 2, 2, 6, 2, 131072, 7, 2, 131073, 8, 2, 131073, 9, 2, 131073, 10, 2, 131073, 11, 2, 131073, 12, 2, 131074, 983065, 2, 0, 983066, 2, 1, 983067, 2, 1, 983068, 2, 1, 983069, 2, 2, 1048601, 2, 131072, 1048602, 2, 131073, 1048603, 2, 131073, 1048604, 2, 131073, 1048605, 2, 131074 )

[node name="GreenPaths" parent="." index="7"]
material = SubResource( 9 )

[node name="BlueWalls" parent="." index="8"]
material = SubResource( 11 )
tile_data = PoolIntArray( 983044, 2, 0, 983045, 2, 1, 983046, 2, 1, 983047, 2, 1, 983048, 2, 2, 1048580, 2, 131072, 1048581, 2, 131073, 1048582, 2, 131073, 1048583, 2, 131073, 1048584, 2, 131074 )

[node name="BluePaths" parent="." index="9"]
material = SubResource( 13 )

[node name="Doppel" parent="." index="10" instance=ExtResource( 3 )]
position = Vector2( 342, 103 )

[node name="Eye" parent="." index="11" instance=ExtResource( 4 )]
position = Vector2( 181, 255 )

[node name="Eye2" parent="." index="12" instance=ExtResource( 4 )]
position = Vector2( 359, 255 )
Color = 4

[node name="SceneChangeTrigger" parent="." index="13" instance=ExtResource( 5 )]
position = Vector2( 117, 303 )
ScenePath = "res://Fabs/Prison3.tscn"

[node name="CollisionShape2D" parent="SceneChangeTrigger" index="0"]
position = Vector2( 2.75, -10.5 )
shape = SubResource( 14 )

[node name="Shroom" parent="." index="14" instance=ExtResource( 6 )]
material = SubResource( 16 )
position = Vector2( 388, -98 )
Green = true

[node name="Shroom2" parent="." index="15" instance=ExtResource( 6 )]
material = SubResource( 18 )
position = Vector2( 150, -98 )

[node name="Eye3" parent="." index="16" instance=ExtResource( 4 )]
position = Vector2( 533, 283 )
Color = 5

[editable path="Character"]
[editable path="SceneChangeTrigger"]
