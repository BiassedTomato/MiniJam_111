[gd_scene load_steps=25 format=2]

[ext_resource path="res://Fabs/Eye.tscn" type="PackedScene" id=1]
[ext_resource path="res://ShroomShader.tres" type="Shader" id=2]
[ext_resource path="res://Fabs/Base.tscn" type="PackedScene" id=3]
[ext_resource path="res://SceneChangeTrigger.tscn" type="PackedScene" id=4]

[sub_resource type="ShaderMaterial" id=32]
resource_local_to_scene = true
shader = ExtResource( 2 )
shader_param/red = false
shader_param/green = false
shader_param/blue = false

[sub_resource type="Shader" id=15]
resource_local_to_scene = true
code = "shader_type canvas_item;

uniform bool red;
uniform bool green;
uniform bool blue;

uniform bool alpha;

void fragment()
{
	float rv=0f;
	float gv=0f;
	float bv=0f;
	
	float av=0f;
	
	if(!red)
		rv=0.85f;
	if(!green)
		gv=0.85f;
	if(!blue)
		bv=0.85f;
		
	if(!alpha)
		av=0.85f;
		
		vec4 pix=texture(TEXTURE,UV);
		
	if(!green&&!red&&!blue)
	{
		COLOR=vec4(0f,0f,0f,0f);
	}
	else
		COLOR=vec4(max(pix.r-rv,0.15f),max(pix.g-gv,0.15f),max(pix.b-bv,0.15f),pix.a);
	
	
}"

[sub_resource type="ShaderMaterial" id=16]
resource_local_to_scene = true
shader = SubResource( 15 )
shader_param/red = true
shader_param/green = false
shader_param/blue = false
shader_param/alpha = false

[sub_resource type="Shader" id=27]
resource_local_to_scene = true
code = "shader_type canvas_item;

uniform bool red;
uniform bool green;
uniform bool blue;

uniform bool alpha;

void fragment()
{
	float rv=0f;
	float gv=0f;
	float bv=0f;
	
	float av=0f;
	
	if(!red)
		rv=0.85f;
	if(!green)
		gv=0.85f;
	if(!blue)
		bv=0.85f;
		
	if(!alpha)
		av=0.85f;
		
		vec4 pix=texture(TEXTURE,UV);
		
	if(!green&&!red&&!blue)
	{
		COLOR=vec4(0f,0f,0f,0f);
	}
	else
		COLOR=vec4(max(pix.r-rv,0.15f),max(pix.g-gv,0.15f),max(pix.b-bv,0.15f),pix.a);
	
	
}"

[sub_resource type="ShaderMaterial" id=28]
resource_local_to_scene = true
shader = SubResource( 27 )
shader_param/red = true
shader_param/green = false
shader_param/blue = false
shader_param/alpha = false

[sub_resource type="Shader" id=19]
resource_local_to_scene = true
code = "shader_type canvas_item;

uniform bool red;
uniform bool green;
uniform bool blue;

uniform bool alpha;

void fragment()
{
	float rv=0f;
	float gv=0f;
	float bv=0f;
	
	float av=0f;
	
	if(!red)
		rv=0.85f;
	if(!green)
		gv=0.85f;
	if(!blue)
		bv=0.85f;
		
	if(!alpha)
		av=0.85f;
		
		vec4 pix=texture(TEXTURE,UV);
		
	if(!green&&!red&&!blue)
	{
		COLOR=vec4(0f,0f,0f,0f);
	}
	else
		COLOR=vec4(max(pix.r-rv,0.15f),max(pix.g-gv,0.15f),max(pix.b-bv,0.15f),pix.a);
	
	
}"

[sub_resource type="ShaderMaterial" id=20]
resource_local_to_scene = true
shader = SubResource( 19 )
shader_param/red = false
shader_param/green = true
shader_param/blue = false
shader_param/alpha = false

[sub_resource type="Shader" id=29]
resource_local_to_scene = true
code = "shader_type canvas_item;

uniform bool red;
uniform bool green;
uniform bool blue;

uniform bool alpha;

void fragment()
{
	float rv=0f;
	float gv=0f;
	float bv=0f;
	
	float av=0f;
	
	if(!red)
		rv=0.85f;
	if(!green)
		gv=0.85f;
	if(!blue)
		bv=0.85f;
		
	if(!alpha)
		av=0.85f;
		
		vec4 pix=texture(TEXTURE,UV);
		
	if(!green&&!red&&!blue)
	{
		COLOR=vec4(0f,0f,0f,0f);
	}
	else
		COLOR=vec4(max(pix.r-rv,0.15f),max(pix.g-gv,0.15f),max(pix.b-bv,0.15f),pix.a);
	
	
}"

[sub_resource type="ShaderMaterial" id=30]
resource_local_to_scene = true
shader = SubResource( 29 )
shader_param/red = false
shader_param/green = true
shader_param/blue = false
shader_param/alpha = false

[sub_resource type="Shader" id=23]
resource_local_to_scene = true
code = "shader_type canvas_item;

uniform bool red;
uniform bool green;
uniform bool blue;

uniform bool alpha;

void fragment()
{
	float rv=0f;
	float gv=0f;
	float bv=0f;
	
	float av=0f;
	
	if(!red)
		rv=0.85f;
	if(!green)
		gv=0.85f;
	if(!blue)
		bv=0.85f;
		
	if(!alpha)
		av=0.85f;
		
		vec4 pix=texture(TEXTURE,UV);
		
	if(!green&&!red&&!blue)
	{
		COLOR=vec4(0f,0f,0f,0f);
	}
	else
		COLOR=vec4(max(pix.r-rv,0.15f),max(pix.g-gv,0.15f),max(pix.b-bv,0.15f),pix.a);
	
	
}"

[sub_resource type="ShaderMaterial" id=24]
resource_local_to_scene = true
shader = SubResource( 23 )
shader_param/red = false
shader_param/green = false
shader_param/blue = true
shader_param/alpha = false

[sub_resource type="Shader" id=25]
resource_local_to_scene = true
code = "shader_type canvas_item;

uniform bool red;
uniform bool green;
uniform bool blue;

uniform bool alpha;

void fragment()
{
	float rv=0f;
	float gv=0f;
	float bv=0f;
	
	float av=0f;
	
	if(!red)
		rv=0.85f;
	if(!green)
		gv=0.85f;
	if(!blue)
		bv=0.85f;
		
	if(!alpha)
		av=0.85f;
		
		vec4 pix=texture(TEXTURE,UV);
		
	if(!green&&!red&&!blue)
	{
		COLOR=vec4(0f,0f,0f,0f);
	}
	else
		COLOR=vec4(max(pix.r-rv,0.15f),max(pix.g-gv,0.15f),max(pix.b-bv,0.15f),pix.a);
	
	
}"

[sub_resource type="ShaderMaterial" id=31]
resource_local_to_scene = true
shader = SubResource( 25 )
shader_param/red = false
shader_param/green = false
shader_param/blue = true
shader_param/alpha = false

[sub_resource type="Shader" id=7]
resource_local_to_scene = true
code = "shader_type canvas_item;

uniform bool red;
uniform bool green;
uniform bool blue;

uniform bool alpha;

uniform vec4 clear_color:hint_color=vec4(0.15,0.15,0.15,1);

void fragment()
{
	float rv=0f;
	float gv=0f;
	float bv=0f;
	
	float av=0f;
	
	if(!red)
		rv=0.85f;
	if(!green)
		gv=0.85f;
	if(!blue)
		bv=0.85f;
		
	if(!alpha)
		av=0.85f;
		
	vec4 pix=texture(TEXTURE,UV);
		COLOR=vec4(max(pix.r-rv,0.15f),max(pix.g-gv,0.15f),max(pix.b-bv,0.15f),pix.a);
	
	
}"

[sub_resource type="ShaderMaterial" id=8]
resource_local_to_scene = true
shader = SubResource( 7 )
shader_param/red = true
shader_param/green = false
shader_param/blue = false
shader_param/alpha = null
shader_param/clear_color = Color( 0.15, 0.15, 0.15, 1 )

[sub_resource type="Shader" id=9]
resource_local_to_scene = true
code = "shader_type canvas_item;

uniform bool red;
uniform bool green;
uniform bool blue;

uniform bool alpha;

uniform vec4 clear_color:hint_color=vec4(0.15,0.15,0.15,1);

void fragment()
{
	float rv=0f;
	float gv=0f;
	float bv=0f;
	
	float av=0f;
	
	if(!red)
		rv=0.85f;
	if(!green)
		gv=0.85f;
	if(!blue)
		bv=0.85f;
		
	if(!alpha)
		av=0.85f;
		
	vec4 pix=texture(TEXTURE,UV);
		COLOR=vec4(max(pix.r-rv,0.15f),max(pix.g-gv,0.15f),max(pix.b-bv,0.15f),pix.a);
	
	
}"

[sub_resource type="ShaderMaterial" id=10]
resource_local_to_scene = true
shader = SubResource( 9 )
shader_param/red = false
shader_param/green = false
shader_param/blue = true
shader_param/alpha = null
shader_param/clear_color = Color( 0.15, 0.15, 0.15, 1 )

[sub_resource type="Shader" id=11]
resource_local_to_scene = true
code = "shader_type canvas_item;

uniform bool red;
uniform bool green;
uniform bool blue;

uniform bool alpha;

uniform vec4 clear_color:hint_color=vec4(0.15,0.15,0.15,1);

void fragment()
{
	float rv=0f;
	float gv=0f;
	float bv=0f;
	
	float av=0f;
	
	if(!red)
		rv=0.85f;
	if(!green)
		gv=0.85f;
	if(!blue)
		bv=0.85f;
		
	if(!alpha)
		av=0.85f;
		
	vec4 pix=texture(TEXTURE,UV);
		COLOR=vec4(max(pix.r-rv,0.15f),max(pix.g-gv,0.15f),max(pix.b-bv,0.15f),pix.a);
	
	
}"

[sub_resource type="ShaderMaterial" id=12]
resource_local_to_scene = true
shader = SubResource( 11 )
shader_param/red = false
shader_param/green = true
shader_param/blue = false
shader_param/alpha = null
shader_param/clear_color = Color( 0.15, 0.15, 0.15, 1 )

[sub_resource type="RectangleShape2D" id=33]
resource_local_to_scene = true
extents = Vector2( 8, 24 )

[node name="Base" instance=ExtResource( 3 )]
DefaultGreenEnabled = true
DefaultBlueEnabled = true

[node name="RichTextLabel" parent="CanvasLayer" index="0"]
text = "ROUNDABOUT"

[node name="Bounds" parent="." index="1"]
tile_data = PoolIntArray( -1179642, 5, 65536, -1179641, 5, 65537, -1179640, 5, 65537, -1179639, 5, 65537, -1179638, 5, 65537, -1179637, 5, 65537, -1179636, 5, 65538, -1179634, 5, 65536, -1179633, 5, 65537, -1179632, 5, 65537, -1179631, 5, 65537, -1179630, 5, 65537, -1179629, 5, 65537, -1179628, 5, 65538, -1114106, 5, 131072, -1114105, 5, 131073, -1114104, 5, 131073, -1114103, 5, 131073, -1114102, 5, 131073, -1114101, 5, 131073, -1114100, 5, 131074, -1114098, 5, 131072, -1114097, 5, 131073, -1114096, 5, 131073, -1114095, 5, 131073, -1114094, 5, 131073, -1114093, 5, 131073, -1114092, 5, 131074, -1114091, 4, 0, -1114090, 4, 0, -1114089, 4, 0, -1114088, 4, 0, -1114087, 4, 0, -1114086, 4, 0, -1114085, 4, 0, -1114084, 4, 0, -1114083, 4, 0, -1114082, 4, 0, -1114081, 4, 0, -1114080, 4, 0, -1048570, 5, 131072, -1048569, 5, 131073, -1048568, 5, 131073, -1048567, 5, 131073, -1048566, 5, 131073, -1048565, 5, 131073, -1048564, 5, 65539, -1048563, 5, 65537, -1048562, 5, 65540, -1048561, 5, 131073, -1048560, 5, 131073, -1048559, 5, 131073, -1048558, 5, 131073, -1048557, 5, 131073, -1048556, 5, 131073, -983034, 5, 131072, -983033, 5, 131073, -983032, 5, 131073, -983031, 5, 131073, -983030, 5, 131073, -983029, 5, 131073, -983028, 5, 131073, -983027, 5, 131073, -983026, 5, 131073, -983025, 5, 131073, -983024, 5, 131073, -983023, 5, 131073, -983022, 5, 131073, -983021, 5, 131073, -983020, 5, 131073, -917498, 5, 131072, -917497, 5, 131073, -917496, 5, 131073, -917495, 5, 131073, -917494, 5, 131073, -917493, 5, 131073, -917492, 5, 3, -917491, 5, 196609, -917490, 5, 4, -917489, 5, 131073, -917488, 5, 131073, -917487, 5, 131073, -917486, 5, 131073, -917485, 5, 131073, -917484, 5, 131073, -851962, 5, 131072, -851961, 5, 131073, -851960, 5, 131073, -851959, 5, 131073, -851958, 5, 131073, -851957, 5, 131073, -851956, 5, 131074, -851954, 5, 131072, -851953, 5, 131073, -851952, 5, 131073, -851951, 5, 131073, -851950, 5, 131073, -851949, 5, 131073, -851948, 5, 131074, -851947, 4, 0, -851946, 4, 0, -851945, 4, 0, -851944, 4, 0, -851943, 4, 0, -851942, 4, 0, -851941, 4, 0, -851940, 4, 0, -851939, 4, 0, -851938, 4, 0, -851937, 4, 0, -851936, 4, 0, -786426, 5, 196608, -786425, 5, 196609, -786424, 5, 4, -786423, 5, 131073, -786422, 5, 3, -786421, 5, 196609, -786420, 5, 196610, -786418, 5, 196608, -786417, 5, 196609, -786416, 5, 4, -786415, 5, 131073, -786414, 5, 3, -786413, 5, 196609, -786412, 5, 196610, -720888, 5, 131072, -720887, 5, 131073, -720886, 5, 131074, -720880, 5, 131072, -720879, 5, 131073, -720878, 5, 131074, -655354, 5, 65536, -655353, 5, 65537, -655352, 5, 65540, -655351, 5, 131073, -655350, 5, 65539, -655349, 5, 65537, -655348, 5, 65538, -655346, 5, 65536, -655345, 5, 65537, -655344, 5, 65540, -655343, 5, 131073, -655342, 5, 65539, -655341, 5, 65537, -655340, 5, 65538, -589818, 5, 131072, -589817, 5, 131073, -589816, 5, 131073, -589815, 5, 131073, -589814, 5, 131073, -589813, 5, 131073, -589812, 5, 131074, -589810, 5, 131072, -589809, 5, 131073, -589808, 5, 131073, -589807, 5, 131073, -589806, 5, 131073, -589805, 5, 131073, -589804, 5, 131074, -524282, 5, 131072, -524281, 5, 131073, -524280, 5, 131073, -524279, 5, 131073, -524278, 5, 131073, -524277, 5, 131073, -524276, 5, 65539, -524275, 5, 65537, -524274, 5, 65540, -524273, 5, 131073, -524272, 5, 131073, -524271, 5, 131073, -524270, 5, 131073, -524269, 5, 131073, -524268, 5, 131074, -458746, 5, 131072, -458745, 5, 131073, -458744, 5, 131073, -458743, 5, 131073, -458742, 5, 131073, -458741, 5, 131073, -458740, 5, 131073, -458739, 5, 131073, -458738, 5, 131073, -458737, 5, 131073, -458736, 5, 131073, -458735, 5, 131073, -458734, 5, 131073, -458733, 5, 131073, -458732, 5, 131074, -393210, 5, 131072, -393209, 5, 131073, -393208, 5, 131073, -393207, 5, 131073, -393206, 5, 131073, -393205, 5, 131073, -393204, 5, 3, -393203, 5, 196609, -393202, 5, 4, -393201, 5, 131073, -393200, 5, 131073, -393199, 5, 131073, -393198, 5, 131073, -393197, 5, 131073, -393196, 5, 131074, -327674, 5, 131072, -327673, 5, 131073, -327672, 5, 131073, -327671, 5, 131073, -327670, 5, 131073, -327669, 5, 131073, -327668, 5, 131074, -327666, 5, 131072, -327665, 5, 131073, -327664, 5, 131073, -327663, 5, 131073, -327662, 5, 131073, -327661, 5, 131073, -327660, 5, 131074, -262138, 5, 196608, -262137, 5, 196609, -262136, 5, 196609, -262135, 5, 196609, -262134, 5, 196609, -262133, 5, 196609, -262132, 5, 196610, -262130, 5, 196608, -262129, 5, 196609, -262128, 5, 131073, -262127, 5, 131073, -262126, 5, 131073, -262125, 5, 196609, -262124, 5, 196610, -196593, 4, 0, -196589, 4, 0, -131057, 4, 0, -131053, 4, 0, -65521, 4, 0, -65517, 4, 0, 15, 4, 0, 19, 4, 0, 65551, 4, 0, 65555, 4, 0, 131078, 5, 65536, 131079, 5, 65537, 131080, 5, 65537, 131081, 5, 65537, 131082, 5, 65537, 131083, 5, 65537, 131084, 5, 65538, 131086, 5, 65536, 131087, 5, 65537, 131088, 5, 65537, 131089, 5, 131073, 131090, 5, 65537, 131091, 5, 65537, 131092, 5, 65538, 196614, 5, 131072, 196615, 5, 131073, 196616, 5, 131073, 196617, 5, 131073, 196618, 5, 131073, 196619, 5, 131073, 196620, 5, 131074, 196622, 5, 131072, 196623, 5, 131073, 196624, 5, 131073, 196625, 5, 131073, 196626, 5, 131073, 196627, 5, 131073, 196628, 5, 131074, 262150, 5, 131072, 262151, 5, 131073, 262152, 5, 131073, 262153, 5, 131073, 262154, 5, 131073, 262155, 5, 131073, 262156, 5, 65539, 262157, 5, 65537, 262158, 5, 65540, 262159, 5, 131073, 262160, 5, 131073, 262161, 5, 131073, 262162, 5, 131073, 262163, 5, 131073, 262164, 5, 131074, 327686, 5, 131072, 327687, 5, 131073, 327688, 5, 131073, 327689, 5, 131073, 327690, 5, 131073, 327691, 5, 131073, 327692, 5, 131073, 327693, 5, 131073, 327694, 5, 131073, 327695, 5, 131073, 327696, 5, 131073, 327697, 5, 131073, 327698, 5, 131073, 327699, 5, 131073, 327700, 5, 131074, 393222, 5, 131072, 393223, 5, 131073, 393224, 5, 131073, 393225, 5, 131073, 393226, 5, 131073, 393227, 5, 131073, 393228, 5, 3, 393229, 5, 196609, 393230, 5, 4, 393231, 5, 131073, 393232, 5, 131073, 393233, 5, 131073, 393234, 5, 131073, 393235, 5, 131073, 393236, 5, 131074, 458758, 5, 131072, 458759, 5, 131073, 458760, 5, 131073, 458761, 5, 131073, 458762, 5, 131073, 458763, 5, 131073, 458764, 5, 131074, 458766, 5, 131072, 458767, 5, 131073, 458768, 5, 131073, 458769, 5, 131073, 458770, 5, 131073, 458771, 5, 131073, 458772, 5, 131074, 524294, 5, 196608, 524295, 5, 196609, 524296, 5, 4, 524297, 5, 131073, 524298, 5, 3, 524299, 5, 196609, 524300, 5, 196610, 524302, 5, 196608, 524303, 5, 196609, 524304, 5, 4, 524305, 5, 131073, 524306, 5, 3, 524307, 5, 196609, 524308, 5, 196610, 589832, 5, 131072, 589833, 5, 131073, 589834, 5, 131074, 589840, 5, 131072, 589841, 5, 131073, 589842, 5, 131074, 655366, 5, 65536, 655367, 5, 65537, 655368, 5, 65540, 655369, 5, 131073, 655370, 5, 65539, 655371, 5, 65537, 655372, 5, 65538, 655374, 5, 65536, 655375, 5, 65537, 655376, 5, 65540, 655377, 5, 131073, 655378, 5, 65539, 655379, 5, 65537, 655380, 5, 65538, 720902, 5, 131072, 720903, 5, 131073, 720904, 5, 131073, 720905, 5, 131073, 720906, 5, 131073, 720907, 5, 131073, 720908, 5, 131074, 720910, 5, 131072, 720911, 5, 131073, 720912, 5, 131073, 720913, 5, 131073, 720914, 5, 131073, 720915, 5, 131073, 720916, 5, 131074, 786438, 5, 131072, 786439, 5, 131073, 786440, 5, 131073, 786441, 5, 131073, 786442, 5, 131073, 786443, 5, 131073, 786444, 5, 65539, 786445, 5, 65537, 786446, 5, 65540, 786447, 5, 131073, 786448, 5, 131073, 786449, 5, 131073, 786450, 5, 131073, 786451, 5, 131073, 786452, 5, 131074, 851974, 5, 131072, 851975, 5, 131073, 851976, 5, 131073, 851977, 5, 131073, 851978, 5, 131073, 851979, 5, 131073, 851980, 5, 131073, 851981, 5, 131073, 851982, 5, 131073, 851983, 5, 131073, 851984, 5, 131073, 851985, 5, 131073, 851986, 5, 131073, 851987, 5, 131073, 851988, 5, 131074, 917510, 5, 131072, 917511, 5, 131073, 917512, 5, 131073, 917513, 5, 131073, 917514, 5, 131073, 917515, 5, 131073, 917516, 5, 3, 917517, 5, 196609, 917518, 5, 4, 917519, 5, 131073, 917520, 5, 131073, 917521, 5, 131073, 917522, 5, 131073, 917523, 5, 131073, 917524, 5, 131074, 983046, 5, 131072, 983047, 5, 131073, 983048, 5, 131073, 983049, 5, 131073, 983050, 5, 131073, 983051, 5, 131073, 983052, 5, 131074, 983054, 5, 131072, 983055, 5, 131073, 983056, 5, 131073, 983057, 5, 131073, 983058, 5, 131073, 983059, 5, 131073, 983060, 5, 131074, 1048582, 5, 131072, 1048583, 5, 131073, 1048584, 5, 131073, 1048585, 5, 131073, 1048586, 5, 131073, 1048587, 5, 131073, 1048588, 5, 131074, 1048590, 5, 196608, 1048591, 5, 196609, 1048592, 5, 196609, 1048593, 5, 196609, 1048594, 5, 196609, 1048595, 5, 196609, 1048596, 5, 196610, 1114118, 5, 131072, 1114119, 5, 131073, 1114120, 5, 131073, 1114121, 5, 131073, 1114122, 5, 131073, 1114123, 5, 131073, 1114124, 5, 131074, 1179648, 5, 65536, 1179649, 5, 65537, 1179650, 5, 65537, 1179651, 5, 65537, 1179652, 5, 65537, 1179653, 5, 65537, 1179654, 5, 65540, 1179655, 5, 131073, 1179656, 5, 131073, 1179657, 5, 131073, 1179658, 5, 131073, 1179659, 5, 131073, 1179660, 5, 131074, 1245184, 5, 131072, 1245185, 5, 131073, 1245186, 5, 131073, 1245187, 5, 131073, 1245188, 5, 131073, 1245189, 5, 131073, 1245190, 5, 131073, 1245191, 5, 131073, 1245192, 5, 131073, 1245193, 5, 131073, 1245194, 5, 131073, 1245195, 5, 131073, 1245196, 5, 131074, 1310720, 5, 131072, 1310721, 5, 131073, 1310722, 5, 131073, 1310723, 5, 131073, 1310724, 5, 131073, 1310725, 5, 131073, 1310726, 5, 131073, 1310727, 5, 131073, 1310728, 5, 131073, 1310729, 5, 131073, 1310730, 5, 131073, 1310731, 5, 131073, 1310732, 5, 131074, 1376256, 5, 131072, 1376257, 5, 131073, 1376258, 5, 131073, 1376259, 5, 131073, 1376260, 5, 131073, 1376261, 5, 131073, 1376262, 5, 131073, 1376263, 5, 131073, 1376264, 5, 131073, 1376265, 5, 131073, 1376266, 5, 131073, 1376267, 5, 131073, 1376268, 5, 131074, 1441792, 5, 131072, 1441793, 5, 131073, 1441794, 5, 131073, 1441795, 5, 131073, 1441796, 5, 131073, 1441797, 5, 131073, 1441798, 5, 131073, 1441799, 5, 131073, 1441800, 5, 131073, 1441801, 5, 131073, 1441802, 5, 131073, 1441803, 5, 131073, 1441804, 5, 131074, 1507328, 5, 196608, 1507329, 5, 196609, 1507330, 5, 196609, 1507331, 5, 196609, 1507332, 5, 196609, 1507333, 5, 196609, 1507334, 5, 196609, 1507335, 5, 196609, 1507336, 5, 196609, 1507337, 5, 196609, 1507338, 5, 196609, 1507339, 5, 196609, 1507340, 5, 196610 )

[node name="Character" parent="." index="2"]
position = Vector2( 39, 328 )

[node name="Sprite" parent="Character" index="0"]
material = SubResource( 32 )

[node name="Camera2D" parent="." index="3"]
position = Vector2( 39, 328 )

[node name="RedWalls" parent="." index="4"]
material = SubResource( 16 )
tile_data = PoolIntArray( -1114097, 2, 0, -1114096, 2, 1, -1114095, 2, 1, -1114094, 2, 1, -1114093, 2, 2, -1048561, 2, 65536, -1048560, 2, 65537, -1048559, 2, 65537, -1048558, 2, 65537, -1048557, 2, 65538, -983025, 2, 65536, -983024, 2, 65537, -983023, 2, 65537, -983022, 2, 65537, -983021, 2, 65538, -917489, 2, 65536, -917488, 2, 65537, -917487, 2, 65537, -917486, 2, 65537, -917485, 2, 65538, -851953, 2, 131072, -851952, 2, 131073, -851951, 2, 131073, -851950, 2, 131073, -851949, 2, 131074, 720903, 2, 0, 720904, 2, 1, 720905, 2, 1, 720906, 2, 1, 720907, 2, 2, 786439, 2, 65536, 786440, 2, 65537, 786441, 2, 65537, 786442, 2, 65537, 786443, 2, 65538, 851975, 2, 65536, 851976, 2, 65537, 851977, 2, 65537, 851978, 2, 65537, 851979, 2, 65538, 917511, 2, 65536, 917512, 2, 65537, 917513, 2, 65537, 917514, 2, 65537, 917515, 2, 65538, 983047, 2, 131072, 983048, 2, 131073, 983049, 2, 131073, 983050, 2, 131073, 983051, 2, 131074 )

[node name="RedPaths" parent="." index="5"]
material = SubResource( 28 )
tile_data = PoolIntArray( -262128, 3, 0, -262127, 3, 0, -262126, 3, 0, -196592, 3, 0, -196591, 3, 0, -196590, 3, 0, -131056, 3, 0, -131055, 3, 0, -131054, 3, 0 )

[node name="GreenWalls" parent="." index="6"]
material = SubResource( 20 )
tile_data = PoolIntArray( -1114105, 2, 0, -1114104, 2, 1, -1114103, 2, 1, -1114102, 2, 1, -1114101, 2, 2, -1048569, 2, 65536, -1048568, 2, 65537, -1048567, 2, 65537, -1048566, 2, 65537, -1048565, 2, 65538, -983033, 2, 65536, -983032, 2, 65537, -983031, 2, 65537, -983030, 2, 65537, -983029, 2, 65538, -917497, 2, 65536, -917496, 2, 65537, -917495, 2, 65537, -917494, 2, 65537, -917493, 2, 65538, -851961, 2, 131072, -851960, 2, 131073, -851959, 2, 131073, -851958, 2, 131073, -851957, 2, 131074, 196615, 2, 0, 196616, 2, 1, 196617, 2, 1, 196618, 2, 1, 196619, 2, 2, 262151, 2, 65536, 262152, 2, 65537, 262153, 2, 65537, 262154, 2, 65537, 262155, 2, 65538, 327687, 2, 65536, 327688, 2, 65537, 327689, 2, 65537, 327690, 2, 65537, 327691, 2, 65538, 393223, 2, 65536, 393224, 2, 65537, 393225, 2, 65537, 393226, 2, 65537, 393227, 2, 65538, 458759, 2, 131072, 458760, 2, 131073, 458761, 2, 131073, 458762, 2, 131073, 458763, 2, 131074 )

[node name="GreenPaths" parent="." index="7"]
material = SubResource( 30 )
tile_data = PoolIntArray( -1048556, 3, 0, -1048555, 3, 0, -1048554, 3, 0, -1048553, 3, 0, -1048552, 3, 0, -1048551, 3, 0, -1048550, 3, 0, -1048549, 3, 0, -1048548, 3, 0, -1048547, 3, 0, -1048546, 3, 0, -1048545, 3, 0, -983020, 3, 0, -983019, 3, 0, -983018, 3, 0, -983017, 3, 0, -983016, 3, 0, -983015, 3, 0, -983014, 3, 0, -983013, 3, 0, -983012, 3, 0, -983011, 3, 0, -983010, 3, 0, -983009, 3, 0, -917484, 3, 0, -917483, 3, 0, -917482, 3, 0, -917481, 3, 0, -917480, 3, 0, -917479, 3, 0, -917478, 3, 0, -917477, 3, 0, -917476, 3, 0, -917475, 3, 0, -917474, 3, 0, -917473, 3, 0, -65520, 3, 0, -65519, 3, 0, -65518, 3, 0, 16, 3, 0, 17, 3, 0, 18, 3, 0 )

[node name="BlueWalls" parent="." index="8"]
material = SubResource( 24 )
tile_data = PoolIntArray( -589817, 2, 0, -589816, 2, 1, -589815, 2, 1, -589814, 2, 1, -589813, 2, 2, -524281, 2, 65536, -524280, 2, 65537, -524279, 2, 65537, -524278, 2, 65537, -524277, 2, 65538, -458745, 2, 65536, -458744, 2, 65537, -458743, 2, 65537, -458742, 2, 65537, -458741, 2, 65538, -393209, 2, 65536, -393208, 2, 65537, -393207, 2, 65537, -393206, 2, 65537, -393205, 2, 65538, -327673, 2, 131072, -327672, 2, 131073, -327671, 2, 131073, -327670, 2, 131073, -327669, 2, 131074, 720911, 2, 0, 720912, 2, 1, 720913, 2, 1, 720914, 2, 1, 720915, 2, 2, 786447, 2, 65536, 786448, 2, 65537, 786449, 2, 65537, 786450, 2, 65537, 786451, 2, 65538, 851983, 2, 65536, 851984, 2, 65537, 851985, 2, 65537, 851986, 2, 65537, 851987, 2, 65538, 917519, 2, 65536, 917520, 2, 65537, 917521, 2, 65537, 917522, 2, 65537, 917523, 2, 65538, 983055, 2, 131072, 983056, 2, 131073, 983057, 2, 131073, 983058, 2, 131073, 983059, 2, 131074 )

[node name="BluePaths" parent="." index="9"]
material = SubResource( 31 )
tile_data = PoolIntArray( 65552, 3, 0, 65553, 3, 0, 65554, 3, 0, 131089, 3, 0 )

[node name="Eye" parent="." index="10" groups=["Red"] instance=ExtResource( 1 )]
position = Vector2( 153, 85 )
Open = false

[node name="Sprite" parent="Eye" index="0"]
material = SubResource( 8 )

[node name="Eye2" parent="." index="11" groups=["Blue"] instance=ExtResource( 1 )]
position = Vector2( 153, 217 )
Open = false
Color = 5

[node name="Sprite" parent="Eye2" index="0"]
material = SubResource( 10 )

[node name="Eye3" parent="." index="12" groups=["Green"] instance=ExtResource( 1 )]
position = Vector2( 281, 85 )
Open = false
Color = 4

[node name="Sprite" parent="Eye3" index="0"]
material = SubResource( 12 )

[node name="Eye4" parent="." index="13" groups=["Blue"] instance=ExtResource( 1 )]
position = Vector2( 281, -107 )
Color = 5

[node name="Eye5" parent="." index="14" groups=["Red"] instance=ExtResource( 1 )]
position = Vector2( 153, -236 )

[node name="Eye6" parent="." index="15" groups=["Green"] instance=ExtResource( 1 )]
position = Vector2( 281, -236 )
Color = 4

[node name="Eye7" parent="." index="16" groups=["Green"] instance=ExtResource( 1 )]
position = Vector2( 153, -107 )
Color = 4

[node name="SceneChangeTrigger" parent="." index="17" instance=ExtResource( 4 )]
position = Vector2( 520, -236 )
ScenePath = "res://Fabs/Prison.tscn"

[node name="CollisionShape2D" parent="SceneChangeTrigger" index="0"]
position = Vector2( 0, 4 )
shape = SubResource( 33 )

[editable path="Character"]
[editable path="Eye"]
[editable path="Eye2"]
[editable path="Eye3"]
[editable path="SceneChangeTrigger"]
